(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    571450,      11251]
NotebookOptionsPosition[    569726,      11189]
NotebookOutlinePosition[    570058,      11204]
CellTagsIndexPosition[    570015,      11201]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Needs", "[", "\"\<Toolbox`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<MASSFittingPackage`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Get", "[", "\"\<MASSFittingPackage`\>\"", "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6893394050794687`*^9, 3.6893394055189323`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"pathMASSFittingPath", " ", "=", " ", "\"\<../../\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "dataFolder", " ", "=", " ", "\"\<test_files/simulate_data/test\>\""}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "workingDir", ",", " ", "pathData", ",", " ", "runFitScriptPath", ",", 
       " ", "paramOutputPath", ",", " ", "outputPath", ",", " ", 
       "bigg2equilibrator"}], "}"}], "=", 
     RowBox[{"initializeNotebook", "[", 
      RowBox[{"pathMASSFittingPath", ",", " ", "dataFolder"}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<test_files/simulate_data/test_inputs.m\>\"", "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "Import", "[", "\"\<test_files/simulate_data/get_expected_results.m\>\"", 
     "]"}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
    "outputPath", " ", "=", " ", "\"\<test_files/simulate_data/\>\""}], ";"}],
    "\n", 
   RowBox[{
    RowBox[{
    "paramOutputPath", " ", "=", " ", "\"\<test_files/simulate_data/\>\""}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"testResults", "=", 
     RowBox[{"{", "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{
  3.68933933953122*^9, {3.6893393908756742`*^9, 3.6893393935232143`*^9}, {
   3.689339449077248*^9, 3.689339461257707*^9}, {3.695632077053589*^9, 
   3.695632109243329*^9}, {3.695632568775839*^9, 3.6956325749452057`*^9}, {
   3.695632691442299*^9, 3.6956327057104797`*^9}, {3.6956327783198977`*^9, 
   3.695632779482422*^9}, {3.695638041973557*^9, 3.69563806133673*^9}}],

Cell[BoxData["\<\"Working \
dir:/home/mrama/Dropbox/MASS_fitting_package/mathematica_code/tests/\"\>"], \
"Print",
 CellChangeTimes->{3.695637957259008*^9, 3.695638119111264*^9, 
  3.695638475564196*^9, 3.6956388868395433`*^9, 3.695638986512061*^9, 
  3.695639528024276*^9, 3.6956399066535397`*^9, 3.695640447291524*^9, 
  3.695640878090184*^9, 3.695641133527224*^9, 3.6956415313782043`*^9, 
  3.695641636307336*^9, 3.695641709719783*^9, 3.695641773916795*^9, 
  3.695642545700728*^9, 3.695643069414838*^9, 3.695643137265675*^9, 
  3.695643319341403*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\

test simulateKmData - without Keq value\
\>", "Subsubsection",
 CellChangeTimes->{{3.688379404633004*^9, 3.688379429043716*^9}, {
   3.688464189533341*^9, 3.688464194468556*^9}, {3.688464387337203*^9, 
   3.688464392473873*^9}, {3.6888964464887133`*^9, 3.6888964491204863`*^9}, {
   3.688902367280327*^9, 3.688902371876642*^9}, 3.69563985042106*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"expectedResultKm", "=", 
     RowBox[{"getExpectedResultKm", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", " ", "metSatForSub", ",", " ", 
       "metSatRevSub", ",", " ", "kmList", ",", " ", "otherParmsList", ",", 
       " ", "assumedSaturatingConc", ",", " ", "eTotal", ",", " ", "\n", 
       "\t\t\t", "logStepSize", ",", "activeIsoSub", ",", " ", "bufferInfo", 
       ",", " ", "ionCharge", ",", " ", "fileList"}], "}"}], "=", " ", 
     RowBox[{"getInputTestSimulateKmDataGAPD", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", " ", 
     RowBox[{"simulateKmData", "[", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", " ", "metSatForSub", ",", " ", 
       "metSatRevSub", ",", " ", "kmList", ",", " ", "otherParmsList", ",", 
       " ", "assumedSaturatingConc", ",", " ", "eTotal", ",", "logStepSize", 
       ",", " ", "activeIsoSub", ",", " ", "bufferInfo", ",", " ", 
       "ionCharge", ",", "  ", "paramOutputPath", ",", " ", "outputPath", ",",
        " ", "fileList", ",", " ", "Null", ",", " ", "bigg2equilibrator"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"testResults", ",", "\[IndentingNewLine]", 
      RowBox[{"VerificationTest", "[", 
       RowBox[{"result", ",", "expectedResultKm", " ", ",", " ", 
        RowBox[{"TestID", "\[Rule]", "\"\<simulateKmDataNoKeqVal\>\""}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.68837680299233*^9, 3.688376809170438*^9}, {
   3.688377062946416*^9, 3.688377063582418*^9}, 3.6883771745770893`*^9, {
   3.688377876439951*^9, 3.688377877362*^9}, {3.68837936496352*^9, 
   3.6883794219045477`*^9}, {3.6883794554191933`*^9, 
   3.6883794659892817`*^9}, {3.688379526705597*^9, 3.688379541045879*^9}, {
   3.688379625149222*^9, 3.68837965731959*^9}, {3.6883806192131443`*^9, 
   3.6883806224017076`*^9}, 3.688464044787023*^9, {3.688464202085072*^9, 
   3.6884642364977417`*^9}, {3.6884643258423147`*^9, 3.688464365250352*^9}, {
   3.688464397683638*^9, 3.6884644968457127`*^9}, {3.688464526872285*^9, 
   3.688464540787015*^9}, {3.688464944308197*^9, 3.688464946368619*^9}, 
   3.6884658531585283`*^9, {3.6888964394684134`*^9, 3.688896454544867*^9}, {
   3.688902344960753*^9, 3.688902580879402*^9}, {3.688902664596387*^9, 
   3.6889026914775543`*^9}, {3.688902778953134*^9, 3.688902783832222*^9}, 
   3.688902990884069*^9, {3.688903156989008*^9, 3.688903163620583*^9}, {
   3.688903519750564*^9, 3.688903569135992*^9}, {3.688904314020144*^9, 
   3.688904356023445*^9}, 3.688904427235903*^9, {3.688904540578706*^9, 
   3.688904540777684*^9}, {3.688905061955441*^9, 3.688905063319026*^9}, 
   3.6889057386138573`*^9, 3.68890600152892*^9, {3.688908913195183*^9, 
   3.688908922306211*^9}, {3.6889093723348103`*^9, 3.688909376874568*^9}, {
   3.689338999778722*^9, 3.689339002679694*^9}, {3.695629818611665*^9, 
   3.695629822516865*^9}, 3.695631923606179*^9, {3.695632051440598*^9, 
   3.695632075109871*^9}, {3.695632117042652*^9, 3.6956321305094223`*^9}, 
   3.695632201215337*^9, {3.695632607813156*^9, 3.695632618935079*^9}, 
   3.6956328998335047`*^9, {3.695638002672655*^9, 3.6956380161514874`*^9}, 
   3.695638057550932*^9, {3.695638161984248*^9, 3.6956382174549522`*^9}, {
   3.695638266959483*^9, 3.69563830990837*^9}, 3.695638399598851*^9, {
   3.6956384474618998`*^9, 3.6956384498206577`*^9}, {3.695638878710087*^9, 
   3.6956388795182743`*^9}, 3.6956389861944447`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["test simulateKmData - with Keq value", "Subsubsection",
 CellChangeTimes->{{3.688379404633004*^9, 3.688379429043716*^9}, {
  3.688464189533341*^9, 3.688464194468556*^9}, {3.688464387337203*^9, 
  3.688464392473873*^9}, {3.6888964464887133`*^9, 3.6888964491204863`*^9}, {
  3.688902367280327*^9, 3.688902371876642*^9}, {3.688904445837294*^9, 
  3.688904447787384*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"expectedResultKmWithKeq", "=", 
     RowBox[{"getExpectedResultKmwithKeq", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", " ", "metSatForSub", ",", " ", 
       "metSatRevSub", ",", " ", "kmList", ",", " ", "otherParmsList", ",", 
       " ", "assumedSaturatingConc", ",", " ", "eTotal", ",", " ", "\n", 
       "\t\t\t", "logStepSize", ",", "activeIsoSub", ",", " ", "bufferInfo", 
       ",", " ", "ionCharge", ",", " ", "fileList"}], "}"}], "=", " ", 
     RowBox[{"getInputTestSimulateKmDataGAPD", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KeqVal", " ", "=", " ", "0.408"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"result", "=", " ", 
     RowBox[{"simulateKmData", "[", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", " ", "metSatForSub", ",", " ", 
       "metSatRevSub", ",", " ", "kmList", ",", " ", "otherParmsList", ",", 
       " ", "assumedSaturatingConc", ",", " ", "eTotal", ",", "\n", 
       "\t\t\t   ", "logStepSize", ",", "activeIsoSub", ",", " ", 
       "bufferInfo", ",", " ", "ionCharge", ",", " ", "paramOutputPath", ",", 
       " ", "outputPath", ",", " ", "fileList", ",", " ", "KeqVal"}], "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"testResults", ",", "\[IndentingNewLine]", 
      RowBox[{"VerificationTest", "[", 
       RowBox[{"result", ",", "expectedResultKmWithKeq", " ", ",", " ", 
        RowBox[{"TestID", "\[Rule]", "\"\<simulateKmDataKeqVal\>\""}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.68837680299233*^9, 3.688376809170438*^9}, {
   3.688377062946416*^9, 3.688377063582418*^9}, 3.6883771745770893`*^9, {
   3.688377876439951*^9, 3.688377877362*^9}, {3.68837936496352*^9, 
   3.6883794219045477`*^9}, {3.6883794554191933`*^9, 
   3.6883794659892817`*^9}, {3.688379526705597*^9, 3.688379541045879*^9}, {
   3.688379625149222*^9, 3.68837965731959*^9}, {3.6883806192131443`*^9, 
   3.6883806224017076`*^9}, 3.688464044787023*^9, {3.688464202085072*^9, 
   3.6884642364977417`*^9}, {3.6884643258423147`*^9, 3.688464365250352*^9}, {
   3.688464397683638*^9, 3.6884644968457127`*^9}, {3.688464526872285*^9, 
   3.688464540787015*^9}, {3.688464944308197*^9, 3.688464946368619*^9}, 
   3.6884658531585283`*^9, {3.6888964394684134`*^9, 3.688896454544867*^9}, {
   3.688902344960753*^9, 3.688902580879402*^9}, {3.688902664596387*^9, 
   3.6889026914775543`*^9}, {3.688902778953134*^9, 3.688902783832222*^9}, 
   3.688902990884069*^9, {3.688903156989008*^9, 3.688903163620583*^9}, {
   3.688903519750564*^9, 3.688903569135992*^9}, {3.688904314020144*^9, 
   3.688904356023445*^9}, 3.688904427235903*^9, {3.688904478425074*^9, 
   3.688904531141459*^9}, {3.688905056882612*^9, 3.688905066779132*^9}, 
   3.688905878042445*^9, {3.688905998142652*^9, 3.688905998455714*^9}, {
   3.688908927604121*^9, 3.6889089297965508`*^9}, 3.6889090926208067`*^9, {
   3.688909393526537*^9, 3.688909397735053*^9}, {3.695638953681304*^9, 
   3.695638971469224*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
test simulateKmData - with Keq value; with a Km for a non substrate\
\>", "Subsubsection",
 CellChangeTimes->{{3.688379404633004*^9, 3.688379429043716*^9}, {
  3.688464189533341*^9, 3.688464194468556*^9}, {3.688464387337203*^9, 
  3.688464392473873*^9}, {3.6888964464887133`*^9, 3.6888964491204863`*^9}, {
  3.688902367280327*^9, 3.688902371876642*^9}, {3.688904445837294*^9, 
  3.688904447787384*^9}, {3.694930356915903*^9, 3.694930372027347*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.694931519108386*^9, 3.695639460916369*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"expectedResultKmWithKeq", "=", 
    RowBox[{"getExpectedResultKmwithKeqNonSubstrate", "[", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "rxnTALA2", ",", " ", "metsFullTALA2", ",", " ", "metSatForSubTALA2", 
      ",", " ", "metSatRevSubTALA2", ",", " ", "kmListTALA2", ",", " ", "\n", 
      "\t", "otherParmsListTALA2", ",", " ", "assumedSaturatingConc", ",", 
      " ", "eTotal", ",", " ", "logStepSize", ",", " ", "activeIsoSubTALA2", 
      ",", "\n", "\t", "bufferInfo", ",", " ", "ionCharge", ",", "  ", 
      "fileListTALA2", ",", " ", "KeqValTALA2"}], "}"}], " ", "=", " ", 
    RowBox[{"getInputTestSimulateKmDataTALA2", "[", "]"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"result", "=", " ", 
    RowBox[{"simulateKmData", "[", 
     RowBox[{
     "rxnTALA2", ",", " ", "metsFullTALA2", ",", " ", "metSatForSubTALA2", 
      ",", " ", "metSatRevSubTALA2", ",", " ", "kmListTALA2", ",", " ", "\n", 
      "\t", "otherParmsListTALA2", ",", " ", "assumedSaturatingConc", ",", 
      " ", "eTotal", ",", " ", "logStepSize", ",", " ", "activeIsoSubTALA2", 
      ",", "\n", "\t", "bufferInfo", ",", " ", "ionCharge", ",", " ", 
      "paramOutputPath", ",", " ", "outputPath", ",", " ", "fileListTALA2", 
      ",", " ", "KeqValTALA2"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"AppendTo", "[", 
   RowBox[{"testResults", ",", "\[IndentingNewLine]", 
    RowBox[{"VerificationTest", "[", 
     RowBox[{"result", ",", "expectedResultKmWithKeq", " ", ",", " ", 
      RowBox[{
      "TestID", "\[Rule]", "\"\<simulateKmDataKeqValNonSubstrate\>\""}]}], 
     "]"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.68837680299233*^9, 3.688376809170438*^9}, {
   3.688377062946416*^9, 3.688377063582418*^9}, 3.6883771745770893`*^9, {
   3.688377876439951*^9, 3.688377877362*^9}, {3.68837936496352*^9, 
   3.6883794219045477`*^9}, {3.6883794554191933`*^9, 
   3.6883794659892817`*^9}, {3.688379526705597*^9, 3.688379541045879*^9}, {
   3.688379625149222*^9, 3.68837965731959*^9}, {3.6883806192131443`*^9, 
   3.6883806224017076`*^9}, 3.688464044787023*^9, {3.688464202085072*^9, 
   3.6884642364977417`*^9}, {3.6884643258423147`*^9, 3.688464365250352*^9}, {
   3.688464397683638*^9, 3.6884644968457127`*^9}, {3.688464526872285*^9, 
   3.688464540787015*^9}, {3.688464944308197*^9, 3.688464946368619*^9}, 
   3.6884658531585283`*^9, {3.6888964394684134`*^9, 3.688896454544867*^9}, {
   3.688902344960753*^9, 3.688902580879402*^9}, {3.688902664596387*^9, 
   3.6889026914775543`*^9}, {3.688902778953134*^9, 3.688902783832222*^9}, 
   3.688902990884069*^9, {3.688903156989008*^9, 3.688903163620583*^9}, {
   3.688903519750564*^9, 3.688903569135992*^9}, {3.688904314020144*^9, 
   3.688904356023445*^9}, 3.688904427235903*^9, {3.688904478425074*^9, 
   3.688904531141459*^9}, {3.688905056882612*^9, 3.688905066779132*^9}, 
   3.688905878042445*^9, {3.688905998142652*^9, 3.688905998455714*^9}, {
   3.688908927604121*^9, 3.6889089297965508`*^9}, 3.6889090926208067`*^9, {
   3.688909393526537*^9, 3.688909397735053*^9}, 3.694930696266831*^9, {
   3.6949307748292093`*^9, 3.6949308018821983`*^9}, {3.694931056501721*^9, 
   3.694931074981456*^9}, 3.6949314319157553`*^9, {3.695633400368703*^9, 
   3.695633413678898*^9}, 3.6956390525080976`*^9, {3.695639461637669*^9, 
   3.695639461918056*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["test simulateKcatData - without Keq value", "Subsubsection",
 CellChangeTimes->{{3.688379404633004*^9, 3.688379429043716*^9}, {
  3.688464189533341*^9, 3.688464194468556*^9}, {3.688464387337203*^9, 
  3.688464392473873*^9}, {3.6888964464887133`*^9, 3.6888964491204863`*^9}, {
  3.688902367280327*^9, 3.688902371876642*^9}, {3.688904445837294*^9, 
  3.688904447787384*^9}, {3.6889050525152683`*^9, 3.688905055222204*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"expectedResult", "=", 
     RowBox[{"getExpectedResultKcat", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", " ", "metSatForSub", ",", " ", 
       "metSatRevSub", ",", " ", "kcatList", ",", " ", "otherParmsList", ",", 
       " ", "assumedSaturatingConc", ",", " ", "eTotal", ",", " ", "\n", 
       "\t\t\t", "logStepSize", ",", "nonKmParamWeight", ",", "activeIsoSub", 
       ",", " ", "bufferInfo", ",", " ", "ionCharge", ",", " ", "fileList"}], 
      "}"}], " ", "=", " ", 
     RowBox[{"getInputTestSimulateKcatDataGAPD", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", " ", 
     RowBox[{"simulateKcatData", "[", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", " ", "metSatForSub", ",", " ", 
       "metSatRevSub", ",", " ", "kcatList", ",", " ", "otherParmsList", ",", 
       " ", "assumedSaturatingConc", ",", " ", "eTotal", ",", "\n", 
       "\t\t\t  ", "logStepSize", ",", " ", "nonKmParamWeight", ",", " ", 
       "activeIsoSub", ",", " ", "bufferInfo", ",", " ", "ionCharge", ",", 
       " ", "paramOutputPath", ",", " ", "\n", "\t\t\t  ", "outputPath", ",", 
       " ", "fileList", ",", " ", "Null", ",", " ", "bigg2equilibrator"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"testResults", ",", "\[IndentingNewLine]", 
      RowBox[{"VerificationTest", "[", 
       RowBox[{"result", ",", "expectedResult", " ", ",", " ", 
        RowBox[{"TestID", "\[Rule]", "\"\<simulateKcatDataNoKeqVal\>\""}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.68837680299233*^9, 3.688376809170438*^9}, {
   3.688377062946416*^9, 3.688377063582418*^9}, 3.6883771745770893`*^9, {
   3.688377876439951*^9, 3.688377877362*^9}, {3.68837936496352*^9, 
   3.6883794219045477`*^9}, {3.6883794554191933`*^9, 
   3.6883794659892817`*^9}, {3.688379526705597*^9, 3.688379541045879*^9}, {
   3.688379625149222*^9, 3.68837965731959*^9}, {3.6883806192131443`*^9, 
   3.6883806224017076`*^9}, 3.688464044787023*^9, {3.688464202085072*^9, 
   3.6884642364977417`*^9}, {3.6884643258423147`*^9, 3.688464365250352*^9}, {
   3.688464397683638*^9, 3.6884644968457127`*^9}, {3.688464526872285*^9, 
   3.688464540787015*^9}, {3.688464944308197*^9, 3.688464946368619*^9}, 
   3.6884658531585283`*^9, {3.6888964394684134`*^9, 3.688896454544867*^9}, {
   3.688902344960753*^9, 3.688902580879402*^9}, {3.688902664596387*^9, 
   3.6889026914775543`*^9}, {3.688902778953134*^9, 3.688902783832222*^9}, 
   3.688902990884069*^9, {3.688903156989008*^9, 3.688903163620583*^9}, {
   3.688903519750564*^9, 3.688903569135992*^9}, {3.688904314020144*^9, 
   3.688904356023445*^9}, 3.688904427235903*^9, {3.688904478425074*^9, 
   3.688904531141459*^9}, {3.688905042006423*^9, 3.688905154771555*^9}, {
   3.688905252551395*^9, 3.688905256168755*^9}, {3.688905971626822*^9, 
   3.6889059742057447`*^9}, {3.688909004884317*^9, 3.688909007283242*^9}, {
   3.68890909760279*^9, 3.688909097921118*^9}, {3.689339010661791*^9, 
   3.689339013764804*^9}, {3.695639472287773*^9, 3.6956395116170483`*^9}, {
   3.695639642103559*^9, 3.695639732898168*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["test simulateKcatData - with Keq value", "Subsubsection",
 CellChangeTimes->{{3.688379404633004*^9, 3.688379429043716*^9}, {
  3.688464189533341*^9, 3.688464194468556*^9}, {3.688464387337203*^9, 
  3.688464392473873*^9}, {3.6888964464887133`*^9, 3.6888964491204863`*^9}, {
  3.688902367280327*^9, 3.688902371876642*^9}, {3.688904445837294*^9, 
  3.688904447787384*^9}, {3.6889050525152683`*^9, 3.688905055222204*^9}, {
  3.688905402961936*^9, 3.6889054032332706`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"expectedResult", "=", 
     RowBox[{"getExpectedResultKcatwithKeq", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", " ", "metSatForSub", ",", " ", 
       "metSatRevSub", ",", " ", "kcatList", ",", " ", "otherParmsList", ",", 
       " ", "assumedSaturatingConc", ",", " ", "eTotal", ",", " ", "\n", 
       "\t\t\t", "logStepSize", ",", "nonKmParamWeight", ",", "activeIsoSub", 
       ",", " ", "bufferInfo", ",", " ", "ionCharge", ",", " ", "fileList"}], 
      "}"}], " ", "=", " ", 
     RowBox[{"getInputTestSimulateKcatDataGAPD", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KeqVal", " ", "=", " ", "0.408"}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"result", "=", " ", 
     RowBox[{"simulateKcatData", "[", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", " ", "metSatForSub", ",", " ", 
       "metSatRevSub", ",", " ", "kcatList", ",", " ", "otherParmsList", ",", 
       " ", "assumedSaturatingConc", ",", " ", "eTotal", ",", "\n", 
       "\t\t\t  ", "logStepSize", ",", " ", "nonKmParamWeight", ",", " ", 
       "activeIsoSub", ",", " ", "bufferInfo", ",", " ", "ionCharge", ",", 
       " ", "paramOutputPath", ",", " ", "\n", "\t\t\t  ", "outputPath", ",", 
       " ", "fileList", ",", " ", "KeqVal", ",", " ", "Null"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"testResults", ",", "\[IndentingNewLine]", 
      RowBox[{"VerificationTest", "[", 
       RowBox[{"result", ",", "expectedResult", " ", ",", " ", 
        RowBox[{"TestID", "\[Rule]", "\"\<simulateKcatDataKeqVal\>\""}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.68837680299233*^9, 3.688376809170438*^9}, {
   3.688377062946416*^9, 3.688377063582418*^9}, 3.6883771745770893`*^9, {
   3.688377876439951*^9, 3.688377877362*^9}, {3.68837936496352*^9, 
   3.6883794219045477`*^9}, {3.6883794554191933`*^9, 
   3.6883794659892817`*^9}, {3.688379526705597*^9, 3.688379541045879*^9}, {
   3.688379625149222*^9, 3.68837965731959*^9}, {3.6883806192131443`*^9, 
   3.6883806224017076`*^9}, 3.688464044787023*^9, {3.688464202085072*^9, 
   3.6884642364977417`*^9}, {3.6884643258423147`*^9, 3.688464365250352*^9}, {
   3.688464397683638*^9, 3.6884644968457127`*^9}, {3.688464526872285*^9, 
   3.688464540787015*^9}, {3.688464944308197*^9, 3.688464946368619*^9}, 
   3.6884658531585283`*^9, {3.6888964394684134`*^9, 3.688896454544867*^9}, {
   3.688902344960753*^9, 3.688902580879402*^9}, {3.688902664596387*^9, 
   3.6889026914775543`*^9}, {3.688902778953134*^9, 3.688902783832222*^9}, 
   3.688902990884069*^9, {3.688903156989008*^9, 3.688903163620583*^9}, {
   3.688903519750564*^9, 3.688903569135992*^9}, {3.688904314020144*^9, 
   3.688904356023445*^9}, 3.688904427235903*^9, {3.688904478425074*^9, 
   3.688904531141459*^9}, {3.688905042006423*^9, 3.688905154771555*^9}, {
   3.688905206482223*^9, 3.688905216610642*^9}, {3.688905981372095*^9, 
   3.688905995786851*^9}, {3.688909100822118*^9, 3.688909104855723*^9}, {
   3.695633547797254*^9, 3.695633548159398*^9}, {3.6956370677934933`*^9, 
   3.695637082617951*^9}, 3.6956371667655983`*^9, {3.695639827339767*^9, 
   3.695639836209157*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "test ",
 Cell[BoxData["simulateRateConstRatiosData"], "Input",
  CellChangeTimes->{{3.688882613559923*^9, 3.688882632519943*^9}, {
    3.68888275166187*^9, 3.68888276620781*^9}, {3.68888284643159*^9, 
    3.688882881945403*^9}, {3.688882964906711*^9, 3.688882981654953*^9}, 
    3.688883969228415*^9, {3.6888841565279503`*^9, 3.688884157106266*^9}, {
    3.6888843200881567`*^9, 3.688884335238574*^9}, {3.688884365901078*^9, 
    3.688884371087324*^9}}],
 " - with Kd data"
}], "Subsubsection",
 CellChangeTimes->{{3.688379404633004*^9, 3.688379429043716*^9}, {
  3.688464189533341*^9, 3.688464194468556*^9}, {3.688464387337203*^9, 
  3.688464392473873*^9}, {3.6888964464887133`*^9, 3.6888964491204863`*^9}, {
  3.688902367280327*^9, 3.688902371876642*^9}, {3.688904445837294*^9, 
  3.688904447787384*^9}, {3.6889050525152683`*^9, 3.688905055222204*^9}, {
  3.688905417039085*^9, 3.688905436870253*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"expectedResultKd", " ", "=", " ", 
     RowBox[{"getExpectedResultKd", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", "rateConstsSub", ",", " ", "metsSub", 
       ",", " ", "eTotal", ",", " ", "logStepSize", ",", "nonKmParamWeight", 
       ",", "fileList", ",", " ", "fileListSub", ",", " ", "eqnNameList", ",",
        " ", "eqnValList", ",", " ", "eqnValListPy"}], "}"}], " ", "=", 
     RowBox[{"getInputTestSimulateRatiosDataGAPD", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"otherParmsList", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Kd\>\"", ",", "\"\<nad\>\"", ",", "3.2`*^-7", ",", "\"\<M\>\"", 
        ",", "8.9`", ",", "22.`", ",", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{"\"\<teoa\>\"", ",", "0.04`"}], "}"}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"otherParmsList", " ", "=", " ", 
     RowBox[{"otherParmsList", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pHandT", "=", 
     RowBox[{"{", 
      RowBox[{"8.9", ",", " ", "22"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"KdVal", "=", "3.2`*^-7"}], ";"}], "\n", 
   RowBox[{
    RowBox[{"KdRatio", "=", 
     RowBox[{
      RowBox[{"Toolbox`rateconst", "[", 
       RowBox[{"\"\<GAPD1\>\"", ",", " ", "False"}], "]"}], "/", 
      RowBox[{"Toolbox`rateconst", "[", 
       RowBox[{"\"\<GAPD1\>\"", ",", " ", "True"}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KeqVal", " ", "=", " ", "0.408"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", " ", 
     RowBox[{"simulateRateConstRatiosData", "[", 
      RowBox[{
      "KdRatio", ",", "KdVal", ",", " ", "KeqVal", ",", " ", "metsFull", ",", 
       " ", "rateConstsSub", ",", " ", "metsSub", ",", " ", "eTotal", ",", 
       " ", "nonKmParamWeight", ",", " ", "paramOutputPath", ",", " ", 
       "fileList", ",", " ", "fileListSub", ",", " ", "eqnNameList", ",", " ",
        "eqnValList", ",", " ", "eqnValListPy", ",", " ", "pHandT", ",", " ", 
       "\"\<KdRatio\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"testResults", ",", "\[IndentingNewLine]", 
      RowBox[{"VerificationTest", "[", 
       RowBox[{"result", ",", "expectedResultKd", " ", ",", " ", 
        RowBox[{
        "TestID", "\[Rule]", "\"\<simulateRateConstRatiosDataKd\>\""}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.68837680299233*^9, 3.688376809170438*^9}, {
   3.688377062946416*^9, 3.688377063582418*^9}, 3.6883771745770893`*^9, {
   3.688377876439951*^9, 3.688377877362*^9}, {3.68837936496352*^9, 
   3.6883794219045477`*^9}, {3.6883794554191933`*^9, 
   3.6883794659892817`*^9}, {3.688379526705597*^9, 3.688379541045879*^9}, {
   3.688379625149222*^9, 3.68837965731959*^9}, {3.6883806192131443`*^9, 
   3.6883806224017076`*^9}, 3.688464044787023*^9, {3.688464202085072*^9, 
   3.6884642364977417`*^9}, {3.6884643258423147`*^9, 3.688464365250352*^9}, {
   3.688464397683638*^9, 3.6884644968457127`*^9}, {3.688464526872285*^9, 
   3.688464540787015*^9}, {3.688464944308197*^9, 3.688464946368619*^9}, 
   3.6884658531585283`*^9, {3.6888964394684134`*^9, 3.688896454544867*^9}, {
   3.688902344960753*^9, 3.688902580879402*^9}, {3.688902664596387*^9, 
   3.6889026914775543`*^9}, {3.688902778953134*^9, 3.688902783832222*^9}, 
   3.688902990884069*^9, {3.688903156989008*^9, 3.688903163620583*^9}, {
   3.688903519750564*^9, 3.688903569135992*^9}, {3.688904314020144*^9, 
   3.688904356023445*^9}, 3.688904427235903*^9, {3.688904478425074*^9, 
   3.688904531141459*^9}, {3.688905042006423*^9, 3.688905154771555*^9}, {
   3.688905206482223*^9, 3.688905216610642*^9}, 3.688905406762519*^9, {
   3.688905467170734*^9, 3.688905629661766*^9}, {3.68890606829009*^9, 
   3.688906129222703*^9}, {3.688906464813188*^9, 3.688906467663192*^9}, {
   3.688907008906801*^9, 3.688907009372428*^9}, {3.688907060837777*^9, 
   3.68890707316397*^9}, {3.688907137440235*^9, 3.688907183831799*^9}, {
   3.6889074524421597`*^9, 3.688907454357366*^9}, {3.688907585463509*^9, 
   3.6889076066556873`*^9}, 3.6889078536705093`*^9, {3.695637171992309*^9, 
   3.695637175657523*^9}, {3.6956372210273333`*^9, 3.695637221418489*^9}, 
   3.695639891832654*^9, {3.695639993684012*^9, 3.695640012366417*^9}, {
   3.695640239816875*^9, 3.69564024062158*^9}, {3.6956403731375103`*^9, 
   3.695640387706677*^9}, 3.695640431716215*^9, {3.6956404973089046`*^9, 
   3.6956405408009768`*^9}, {3.695640928720941*^9, 3.6956409583022413`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "test ",
 Cell[BoxData["simulateRateConstRatiosData"], "Input",
  CellChangeTimes->{{3.688882613559923*^9, 3.688882632519943*^9}, {
    3.68888275166187*^9, 3.68888276620781*^9}, {3.68888284643159*^9, 
    3.688882881945403*^9}, {3.688882964906711*^9, 3.688882981654953*^9}, 
    3.688883969228415*^9, {3.6888841565279503`*^9, 3.688884157106266*^9}, {
    3.6888843200881567`*^9, 3.688884335238574*^9}, {3.688884365901078*^9, 
    3.688884371087324*^9}}],
 " - with dKd data"
}], "Subsubsection",
 CellChangeTimes->{{3.688379404633004*^9, 3.688379429043716*^9}, {
  3.688464189533341*^9, 3.688464194468556*^9}, {3.688464387337203*^9, 
  3.688464392473873*^9}, {3.6888964464887133`*^9, 3.6888964491204863`*^9}, {
  3.688902367280327*^9, 3.688902371876642*^9}, {3.688904445837294*^9, 
  3.688904447787384*^9}, {3.6889050525152683`*^9, 3.688905055222204*^9}, {
  3.688905417039085*^9, 3.688905436870253*^9}, {3.688907619586794*^9, 
  3.6889076210709877`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"expectedResultdKd", " ", "=", " ", 
     RowBox[{"getExpectedResultdKd", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", "rateConstsSub", ",", " ", "metsSub", 
       ",", " ", "eTotal", ",", " ", "logStepSize", ",", "nonKmParamWeight", 
       ",", "fileList", ",", " ", "fileListSub", ",", " ", "eqnNameList", ",",
        " ", "eqnValList", ",", " ", "eqnValListPy"}], "}"}], " ", "=", 
     RowBox[{"getInputTestSimulateRatiosDataGAPD", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pHandT", "=", 
     RowBox[{"{", 
      RowBox[{"8.9", ",", " ", "22"}], "}"}]}], ";"}], "\n", "\n", 
   RowBox[{
    RowBox[{"dKdVal", " ", "=", 
     RowBox[{"4.25", "*", 
      RowBox[{"10", "^", "2"}]}]}], 
    RowBox[{"(*", 
     RowBox[{"1.92", "*", 
      RowBox[{"10", "^", "4"}]}], "*)"}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
    "Specify", " ", "the", " ", "Equation", " ", "to", " ", "Be", " ", "Used",
      " ", "for", " ", "Fitting"}], "*)"}], "\n", 
   RowBox[{
    RowBox[{"dKdRatio", " ", "=", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Toolbox`rateconst", "[", 
         RowBox[{"\"\<GAPD1\>\"", ",", " ", "True"}], "]"}], 
        RowBox[{"Toolbox`rateconst", "[", 
         RowBox[{"\"\<GAPD2\>\"", ",", " ", "True"}], "]"}], 
        RowBox[{"Toolbox`rateconst", "[", 
         RowBox[{"\"\<GAPD3\>\"", ",", " ", "True"}], "]"}], 
        RowBox[{"Toolbox`rateconst", "[", 
         RowBox[{"\"\<GAPD4\>\"", ",", " ", "True"}], "]"}], 
        RowBox[{"Toolbox`rateconst", "[", 
         RowBox[{"\"\<GAPD5\>\"", ",", " ", "True"}], "]"}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Toolbox`rateconst", "[", 
         RowBox[{"\"\<GAPD1\>\"", ",", " ", "False"}], "]"}], 
        RowBox[{"Toolbox`rateconst", "[", 
         RowBox[{"\"\<GAPD2\>\"", ",", " ", "False"}], "]"}], 
        RowBox[{"Toolbox`rateconst", "[", 
         RowBox[{"\"\<GAPD3\>\"", ",", " ", "False"}], "]"}], 
        RowBox[{"Toolbox`rateconst", "[", 
         RowBox[{"\"\<GAPD4\>\"", ",", " ", "False"}], "]"}], 
        RowBox[{"Toolbox`rateconst", "[", 
         RowBox[{"\"\<GAPD5\>\"", ",", " ", "False"}], "]"}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KeqVal", " ", "=", " ", "0.408"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", " ", 
     RowBox[{"simulateRateConstRatiosData", "[", 
      RowBox[{
      "dKdRatio", ",", "dKdVal", ",", " ", "KeqVal", ",", " ", "metsFull", 
       ",", " ", "rateConstsSub", ",", " ", "metsSub", ",", " ", "eTotal", 
       ",", " ", "nonKmParamWeight", ",", " ", "outputPath", ",", " ", 
       "fileList", ",", " ", "fileListSub", ",", " ", "eqnNameList", ",", " ",
        "eqnValList", ",", " ", "eqnValListPy", ",", " ", "pHandT", ",", " ", 
       
       RowBox[{"eqnName", "=", "\"\<dKdRatio\>\""}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"testResults", ",", "\[IndentingNewLine]", 
      RowBox[{"VerificationTest", "[", 
       RowBox[{"result", ",", "expectedResultdKd", " ", ",", " ", 
        RowBox[{
        "TestID", "\[Rule]", "\"\<simulateRateConstRatiosDatadKd\>\""}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.68837680299233*^9, 3.688376809170438*^9}, {
   3.688377062946416*^9, 3.688377063582418*^9}, 3.6883771745770893`*^9, {
   3.688377876439951*^9, 3.688377877362*^9}, {3.68837936496352*^9, 
   3.6883794219045477`*^9}, {3.6883794554191933`*^9, 
   3.6883794659892817`*^9}, {3.688379526705597*^9, 3.688379541045879*^9}, {
   3.688379625149222*^9, 3.68837965731959*^9}, {3.6883806192131443`*^9, 
   3.6883806224017076`*^9}, 3.688464044787023*^9, {3.688464202085072*^9, 
   3.6884642364977417`*^9}, {3.6884643258423147`*^9, 3.688464365250352*^9}, {
   3.688464397683638*^9, 3.6884644968457127`*^9}, {3.688464526872285*^9, 
   3.688464540787015*^9}, {3.688464944308197*^9, 3.688464946368619*^9}, 
   3.6884658531585283`*^9, {3.6888964394684134`*^9, 3.688896454544867*^9}, {
   3.688902344960753*^9, 3.688902580879402*^9}, {3.688902664596387*^9, 
   3.6889026914775543`*^9}, {3.688902778953134*^9, 3.688902783832222*^9}, 
   3.688902990884069*^9, {3.688903156989008*^9, 3.688903163620583*^9}, {
   3.688903519750564*^9, 3.688903569135992*^9}, {3.688904314020144*^9, 
   3.688904356023445*^9}, 3.688904427235903*^9, {3.688904478425074*^9, 
   3.688904531141459*^9}, {3.688905042006423*^9, 3.688905154771555*^9}, {
   3.688905206482223*^9, 3.688905216610642*^9}, 3.688905406762519*^9, {
   3.688905467170734*^9, 3.688905629661766*^9}, {3.68890606829009*^9, 
   3.688906129222703*^9}, {3.688906464813188*^9, 3.688906467663192*^9}, {
   3.688907008906801*^9, 3.688907009372428*^9}, {3.688907060837777*^9, 
   3.68890707316397*^9}, {3.688907137440235*^9, 3.688907183831799*^9}, {
   3.6889074524421597`*^9, 3.688907454357366*^9}, {3.688907585463509*^9, 
   3.6889076066556873`*^9}, {3.68890769324325*^9, 3.68890772185851*^9}, 
   3.688907859797241*^9, {3.695637182636807*^9, 3.69563721378167*^9}, 
   3.695641115574821*^9, {3.69564146794457*^9, 3.695641473015643*^9}, 
   3.695641821599498*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "test ",
 Cell[BoxData["simulateRateConstRatiosData"], "Input",
  CellChangeTimes->{{3.688882613559923*^9, 3.688882632519943*^9}, {
    3.68888275166187*^9, 3.68888276620781*^9}, {3.68888284643159*^9, 
    3.688882881945403*^9}, {3.688882964906711*^9, 3.688882981654953*^9}, 
    3.688883969228415*^9, {3.6888841565279503`*^9, 3.688884157106266*^9}, {
    3.6888843200881567`*^9, 3.688884335238574*^9}, {3.688884365901078*^9, 
    3.688884371087324*^9}}],
 " - with Keq data"
}], "Subsubsection",
 CellChangeTimes->{{3.688379404633004*^9, 3.688379429043716*^9}, {
  3.688464189533341*^9, 3.688464194468556*^9}, {3.688464387337203*^9, 
  3.688464392473873*^9}, {3.6888964464887133`*^9, 3.6888964491204863`*^9}, {
  3.688902367280327*^9, 3.688902371876642*^9}, {3.688904445837294*^9, 
  3.688904447787384*^9}, {3.6889050525152683`*^9, 3.688905055222204*^9}, {
  3.688905417039085*^9, 3.688905436870253*^9}, {3.688907619586794*^9, 
  3.6889076210709877`*^9}, {3.688907883046392*^9, 3.688907885793975*^9}, {
  3.695626612887784*^9, 3.6956266158249273`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"expectedResultdKeq", " ", "=", " ", 
     RowBox[{"getExpectedResultKeq", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", "rateConstsSub", ",", " ", "metsSub", 
       ",", " ", "eTotal", ",", " ", "logStepSize", ",", "nonKmParamWeight", 
       ",", "allCatalyticReactions", ",", " ", "unifiedRateConstList", ",", 
       "\[IndentingNewLine]", "fileList", ",", " ", "fileListSub", ",", " ", 
       "eqnNameList", ",", " ", "eqnValList", ",", " ", "eqnValListPy"}], 
      "}"}], " ", "=", 
     RowBox[{"getInputTestSimulateKeqDataGAPD", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KeqName", " ", "=", " ", "\"\<GAPD\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"haldane", "=", 
     RowBox[{
      RowBox[{"haldaneRelation", "[", 
       RowBox[{"KeqName", ",", "allCatalyticReactions"}], "]"}], "/.", 
      "unifiedRateConstList"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"haldaneRatio", "=", 
     RowBox[{"haldane", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KeqVal", " ", "=", " ", "0.408"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pHandT", "=", 
     RowBox[{"{", 
      RowBox[{"8.9", ",", " ", "22"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", "=", " ", 
     RowBox[{"simulateRateConstRatiosData", "[", 
      RowBox[{
      "haldaneRatio", ",", "KeqVal", ",", " ", "KeqVal", ",", " ", "metsFull",
        ",", " ", "rateConstsSub", ",", " ", "metsSub", ",", " ", "eTotal", 
       ",", " ", "nonKmParamWeight", ",", " ", "outputPath", ",", " ", 
       "fileList", ",", " ", "fileListSub", ",", " ", "eqnNameList", ",", " ",
        "eqnValList", ",", " ", "eqnValListPy", ",", " ", "pHandT", ",", " ", 
       "\"\<haldaneRatio\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"testResults", ",", "\[IndentingNewLine]", 
      RowBox[{"VerificationTest", "[", 
       RowBox[{"result", ",", "expectedResultdKeq", " ", ",", " ", 
        RowBox[{
        "TestID", "\[Rule]", "\"\<simulateRateConstRatiosDataKeq\>\""}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.68837680299233*^9, 3.688376809170438*^9}, {
   3.688377062946416*^9, 3.688377063582418*^9}, 3.6883771745770893`*^9, {
   3.688377876439951*^9, 3.688377877362*^9}, {3.68837936496352*^9, 
   3.6883794219045477`*^9}, {3.6883794554191933`*^9, 
   3.6883794659892817`*^9}, {3.688379526705597*^9, 3.688379541045879*^9}, {
   3.688379625149222*^9, 3.68837965731959*^9}, {3.6883806192131443`*^9, 
   3.6883806224017076`*^9}, 3.688464044787023*^9, {3.688464202085072*^9, 
   3.6884642364977417`*^9}, {3.6884643258423147`*^9, 3.688464365250352*^9}, {
   3.688464397683638*^9, 3.6884644968457127`*^9}, {3.688464526872285*^9, 
   3.688464540787015*^9}, {3.688464944308197*^9, 3.688464946368619*^9}, 
   3.6884658531585283`*^9, {3.6888964394684134`*^9, 3.688896454544867*^9}, {
   3.688902344960753*^9, 3.688902580879402*^9}, {3.688902664596387*^9, 
   3.6889026914775543`*^9}, {3.688902778953134*^9, 3.688902783832222*^9}, 
   3.688902990884069*^9, {3.688903156989008*^9, 3.688903163620583*^9}, {
   3.688903519750564*^9, 3.688903569135992*^9}, {3.688904314020144*^9, 
   3.688904356023445*^9}, 3.688904427235903*^9, {3.688904478425074*^9, 
   3.688904531141459*^9}, {3.688905042006423*^9, 3.688905154771555*^9}, {
   3.688905206482223*^9, 3.688905216610642*^9}, 3.688905406762519*^9, {
   3.688905467170734*^9, 3.688905629661766*^9}, {3.68890606829009*^9, 
   3.688906129222703*^9}, {3.688906464813188*^9, 3.688906467663192*^9}, {
   3.688907008906801*^9, 3.688907009372428*^9}, {3.688907060837777*^9, 
   3.68890707316397*^9}, {3.688907137440235*^9, 3.688907183831799*^9}, {
   3.6889074524421597`*^9, 3.688907454357366*^9}, {3.688907585463509*^9, 
   3.6889076066556873`*^9}, {3.68890769324325*^9, 3.68890772185851*^9}, 
   3.688907859797241*^9, {3.68890795557443*^9, 3.688907967891913*^9}, {
   3.688908015109948*^9, 3.688908029153372*^9}, {3.688908474986339*^9, 
   3.6889084831187763`*^9}, {3.6956371862705717`*^9, 3.695637186716938*^9}, 
   3.69563735314606*^9, {3.695637384061076*^9, 3.6956373844560423`*^9}, {
   3.69564151743482*^9, 3.695641551291974*^9}, {3.69564161733637*^9, 
   3.6956416464343147`*^9}, 3.695641734962153*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "test ",
 Cell[BoxData["simulateInhibData"], "Input",
  CellChangeTimes->{{3.688882613559923*^9, 3.688882632519943*^9}, {
    3.68888275166187*^9, 3.68888276620781*^9}, {3.68888284643159*^9, 
    3.688882881945403*^9}, {3.688882964906711*^9, 3.688882981654953*^9}, 
    3.688883969228415*^9, {3.6888841565279503`*^9, 3.688884157106266*^9}, {
    3.6888843200881567`*^9, 3.688884335238574*^9}, {3.688884365901078*^9, 
    3.688884371087324*^9}}],
 " - TALA2"
}], "Subsubsection",
 CellChangeTimes->{{3.688379404633004*^9, 3.688379429043716*^9}, {
  3.688464189533341*^9, 3.688464194468556*^9}, {3.688464387337203*^9, 
  3.688464392473873*^9}, {3.6888964464887133`*^9, 3.6888964491204863`*^9}, {
  3.688902367280327*^9, 3.688902371876642*^9}, {3.688904445837294*^9, 
  3.688904447787384*^9}, {3.6889050525152683`*^9, 3.688905055222204*^9}, {
  3.688905417039085*^9, 3.688905436870253*^9}, {3.688907619586794*^9, 
  3.6889076210709877`*^9}, {3.695641845804893*^9, 3.695641853627246*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"expectedResultdKd", " ", "=", " ", 
     RowBox[{"getExpectedResultInhibTALA2", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", " ", "metSatForSub", ",", " ", 
       "metSatRevSub", ",", " ", "inhibitionList", ",", " ", "kmList", ",", 
       " ", "assumedSaturatingConc", ",", " ", "eTotal", ",", "\n", 
       "\t\t\t   ", "logStepSize", ",", " ", "activeIsoSub", ",", " ", 
       "bufferInfo", ",", " ", "ionCharge", ",", "fileList"}], "}"}], "=", 
     RowBox[{"getInputTestSimulateInhibDataTALA2", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KeqEquilibrator", " ", "=", " ", 
     RowBox[{"1", "/", "1.19"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", " ", "=", " ", 
     RowBox[{"simulateInhibData", "[", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", " ", "metSatForSub", ",", " ", 
       "metSatRevSub", ",", "  ", "inhibitionList", ",", " ", "kmList", ",", 
       " ", "assumedSaturatingConc", ",", " ", "eTotal", ",", "\n", 
       "\t\t\t   ", "logStepSize", ",", " ", "activeIsoSub", ",", " ", 
       "bufferInfo", ",", " ", "ionCharge", ",", " ", "paramOutputPath", ",", 
       " ", "outputPath", ",", " ", "fileList", ",", " ", "KeqEquilibrator"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"testResults", ",", "\[IndentingNewLine]", 
      RowBox[{"VerificationTest", "[", 
       RowBox[{"result", ",", "expectedResultdKd", " ", ",", " ", 
        RowBox[{"TestID", "\[Rule]", "\"\<simulateInhibDataTALA2\>\""}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.68837680299233*^9, 3.688376809170438*^9}, {
   3.688377062946416*^9, 3.688377063582418*^9}, 3.6883771745770893`*^9, {
   3.688377876439951*^9, 3.688377877362*^9}, {3.68837936496352*^9, 
   3.6883794219045477`*^9}, {3.6883794554191933`*^9, 
   3.6883794659892817`*^9}, {3.688379526705597*^9, 3.688379541045879*^9}, {
   3.688379625149222*^9, 3.68837965731959*^9}, {3.6883806192131443`*^9, 
   3.6883806224017076`*^9}, 3.688464044787023*^9, {3.688464202085072*^9, 
   3.6884642364977417`*^9}, {3.6884643258423147`*^9, 3.688464365250352*^9}, {
   3.688464397683638*^9, 3.6884644968457127`*^9}, {3.688464526872285*^9, 
   3.688464540787015*^9}, {3.688464944308197*^9, 3.688464946368619*^9}, 
   3.6884658531585283`*^9, {3.6888964394684134`*^9, 3.688896454544867*^9}, {
   3.688902344960753*^9, 3.688902580879402*^9}, {3.688902664596387*^9, 
   3.6889026914775543`*^9}, {3.688902778953134*^9, 3.688902783832222*^9}, 
   3.688902990884069*^9, {3.688903156989008*^9, 3.688903163620583*^9}, {
   3.688903519750564*^9, 3.688903569135992*^9}, {3.688904314020144*^9, 
   3.688904356023445*^9}, 3.688904427235903*^9, {3.688904478425074*^9, 
   3.688904531141459*^9}, {3.688905042006423*^9, 3.688905154771555*^9}, {
   3.688905206482223*^9, 3.688905216610642*^9}, 3.688905406762519*^9, {
   3.688905467170734*^9, 3.688905629661766*^9}, {3.68890606829009*^9, 
   3.688906129222703*^9}, {3.688906464813188*^9, 3.688906467663192*^9}, {
   3.688907008906801*^9, 3.688907009372428*^9}, {3.688907060837777*^9, 
   3.68890707316397*^9}, {3.688907137440235*^9, 3.688907183831799*^9}, {
   3.6889074524421597`*^9, 3.688907454357366*^9}, {3.688907585463509*^9, 
   3.6889076066556873`*^9}, {3.68890769324325*^9, 3.68890772185851*^9}, 
   3.688907859797241*^9, {3.695637182636807*^9, 3.69563721378167*^9}, 
   3.695641115574821*^9, {3.69564146794457*^9, 3.695641473015643*^9}, 
   3.695641821599498*^9, {3.695641857209446*^9, 3.695641858821903*^9}, {
   3.695642114593952*^9, 3.6956421264726877`*^9}, {3.6956423683077917`*^9, 
   3.695642374004971*^9}, {3.6956425533618526`*^9, 3.69564259651541*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "test ",
 Cell[BoxData["simulateInhibData"], "Input",
  CellChangeTimes->{{3.688882613559923*^9, 3.688882632519943*^9}, {
    3.68888275166187*^9, 3.68888276620781*^9}, {3.68888284643159*^9, 
    3.688882881945403*^9}, {3.688882964906711*^9, 3.688882981654953*^9}, 
    3.688883969228415*^9, {3.6888841565279503`*^9, 3.688884157106266*^9}, {
    3.6888843200881567`*^9, 3.688884335238574*^9}, {3.688884365901078*^9, 
    3.688884371087324*^9}}],
 " - G3PD2"
}], "Subsubsection",
 CellChangeTimes->{{3.688379404633004*^9, 3.688379429043716*^9}, {
  3.688464189533341*^9, 3.688464194468556*^9}, {3.688464387337203*^9, 
  3.688464392473873*^9}, {3.6888964464887133`*^9, 3.6888964491204863`*^9}, {
  3.688902367280327*^9, 3.688902371876642*^9}, {3.688904445837294*^9, 
  3.688904447787384*^9}, {3.6889050525152683`*^9, 3.688905055222204*^9}, {
  3.688905417039085*^9, 3.688905436870253*^9}, {3.688907619586794*^9, 
  3.6889076210709877`*^9}, {3.695641845804893*^9, 3.695641853627246*^9}, {
  3.695643047470516*^9, 3.6956430488675756`*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"expectedResultdKd", " ", "=", " ", 
     RowBox[{"getExpectedResultInhibG3PD2", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", " ", "metSatForSub", ",", " ", 
       "metSatRevSub", ",", " ", "inhibitionList", ",", " ", "kmList", ",", 
       " ", "assumedSaturatingConc", ",", " ", "eTotal", ",", "\n", 
       "\t\t\t   ", "logStepSize", ",", " ", "activeIsoSub", ",", " ", 
       "bufferInfo", ",", " ", "ionCharge", ",", "fileList"}], "}"}], "=", 
     RowBox[{"getInputTestSimulateInhibDataG3PD2", "[", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"KeqEquilibrator", " ", "=", "0.000024"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"result", " ", "=", " ", 
     RowBox[{"simulateInhibData", "[", 
      RowBox[{
      "rxn", ",", " ", "metsFull", ",", " ", "metSatForSub", ",", " ", 
       "metSatRevSub", ",", "  ", "inhibitionList", ",", " ", "kmList", ",", 
       " ", "assumedSaturatingConc", ",", " ", "eTotal", ",", "\n", 
       "\t\t\t   ", "logStepSize", ",", " ", "activeIsoSub", ",", " ", 
       "bufferInfo", ",", " ", "ionCharge", ",", " ", "paramOutputPath", ",", 
       " ", "outputPath", ",", " ", "fileList", ",", " ", "KeqEquilibrator"}],
       "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"testResults", ",", "\[IndentingNewLine]", 
      RowBox[{"VerificationTest", "[", 
       RowBox[{"result", ",", "expectedResultdKd", " ", ",", " ", 
        RowBox[{"TestID", "\[Rule]", "\"\<simulateInhibDataG3PD2\>\""}]}], 
       "]"}]}], "\[IndentingNewLine]", "]"}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.68837680299233*^9, 3.688376809170438*^9}, {
   3.688377062946416*^9, 3.688377063582418*^9}, 3.6883771745770893`*^9, {
   3.688377876439951*^9, 3.688377877362*^9}, {3.68837936496352*^9, 
   3.6883794219045477`*^9}, {3.6883794554191933`*^9, 
   3.6883794659892817`*^9}, {3.688379526705597*^9, 3.688379541045879*^9}, {
   3.688379625149222*^9, 3.68837965731959*^9}, {3.6883806192131443`*^9, 
   3.6883806224017076`*^9}, 3.688464044787023*^9, {3.688464202085072*^9, 
   3.6884642364977417`*^9}, {3.6884643258423147`*^9, 3.688464365250352*^9}, {
   3.688464397683638*^9, 3.6884644968457127`*^9}, {3.688464526872285*^9, 
   3.688464540787015*^9}, {3.688464944308197*^9, 3.688464946368619*^9}, 
   3.6884658531585283`*^9, {3.6888964394684134`*^9, 3.688896454544867*^9}, {
   3.688902344960753*^9, 3.688902580879402*^9}, {3.688902664596387*^9, 
   3.6889026914775543`*^9}, {3.688902778953134*^9, 3.688902783832222*^9}, 
   3.688902990884069*^9, {3.688903156989008*^9, 3.688903163620583*^9}, {
   3.688903519750564*^9, 3.688903569135992*^9}, {3.688904314020144*^9, 
   3.688904356023445*^9}, 3.688904427235903*^9, {3.688904478425074*^9, 
   3.688904531141459*^9}, {3.688905042006423*^9, 3.688905154771555*^9}, {
   3.688905206482223*^9, 3.688905216610642*^9}, 3.688905406762519*^9, {
   3.688905467170734*^9, 3.688905629661766*^9}, {3.68890606829009*^9, 
   3.688906129222703*^9}, {3.688906464813188*^9, 3.688906467663192*^9}, {
   3.688907008906801*^9, 3.688907009372428*^9}, {3.688907060837777*^9, 
   3.68890707316397*^9}, {3.688907137440235*^9, 3.688907183831799*^9}, {
   3.6889074524421597`*^9, 3.688907454357366*^9}, {3.688907585463509*^9, 
   3.6889076066556873`*^9}, {3.68890769324325*^9, 3.68890772185851*^9}, 
   3.688907859797241*^9, {3.695637182636807*^9, 3.69563721378167*^9}, 
   3.695641115574821*^9, {3.69564146794457*^9, 3.695641473015643*^9}, 
   3.695641821599498*^9, {3.695641857209446*^9, 3.695641858821903*^9}, {
   3.695642114593952*^9, 3.6956421264726877`*^9}, {3.6956423683077917`*^9, 
   3.695642374004971*^9}, {3.6956425533618526`*^9, 3.69564259651541*^9}, {
   3.695642634216311*^9, 3.695642644799271*^9}, {3.695643051586207*^9, 
   3.695643054435019*^9}, 3.6956431216230917`*^9}],

Cell[CellGroupData[{

Cell[BoxData["testResults"], "Input",
 CellChangeTimes->{{3.695643294624715*^9, 3.695643295591144*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {3., 9.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateKmDataNoKeqVal\"\>",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateKmDataNoKeqVal\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["result",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0.050659`4.8551716104723","\"s\"","seconds","\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 1, "TestID" -> "simulateKmDataNoKeqVal", "Outcome" -> 
      "Success", "Input" -> HoldForm[$CellContext`result], "ExpectedOutput" -> 
      HoldForm[{{
         1.523272399500685, 0, 0.089, 4.500000000000003*^-6, 0, 0.053, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.09090909090909098}, {
         1.523272399500685, 0, 0.089, 7.132019366075018*^-6, 0, 0.053, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.13680688860321014`}, {
         1.523272399500685, 0, 0.089, 0.000011303488941793127`, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.20076000891310197`}, {
         1.523272399500685, 0, 0.089, 0.000017914822674907372`, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.2847472489508014}, {
         1.523272399500685, 0, 0.089, 0.000028393080501608703`, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.3868631798468571}, {
         1.523272399500685, 0, 0.089, 0.00004500000000000003, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.5000000000000002}, {
         1.523272399500685, 0, 0.089, 0.00007132019366075018, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.6131368201531433}, {
         1.523272399500685, 0, 0.089, 0.00011303488941793127`, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.7152527510491989}, {
         1.523272399500685, 0, 0.089, 0.0001791482267490739, 0, 0.053, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.7992399910868984}, {
         1.523272399500685, 0, 0.089, 0.00028393080501608705`, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.86319311139679}, {
         1.523272399500685, 0, 0.089, 0.00045000000000000026`, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.9090909090909093}, {
         1.523272399500685, 0, 0.00008900000000000009, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.090909090909091}, {
         1.523272399500685, 0, 0.00014105549412903932`, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.13680688860321016`}, {
         1.523272399500685, 0, 0.00022355789240435282`, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.20076000891310186`}, {
         1.523272399500685, 0, 0.000354315381792613, 0.0045, 0, 0.053, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.2847472489508016}, {
         1.523272399500685, 0, 0.0005615520365873723, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.38686317984685703`}, {
         1.523272399500685, 0, 0.0008900000000000009, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.5000000000000002}, {
         1.523272399500685, 0, 0.0014105549412903931`, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.6131368201531434}, {
         1.523272399500685, 0, 0.0022355789240435303`, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.7152527510491988}, {
         1.523272399500685, 0, 0.00354315381792613, 0.0045, 0, 0.053, 1, 8.9, 
          22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.7992399910868984}, {
         1.523272399500685, 0, 0.005615520365873723, 0.0045, 0, 0.053, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.86319311139679}, {
         1.523272399500685, 0, 0.008900000000000009, 0.0045, 0, 0.053, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.9090909090909092}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.000053000000000000014`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.09090909090909093}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.00008399933920043907, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.13680688860321005`}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.00013312998087000775`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.20076000891310172`}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.00021099680039335364`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.28474724895080145`}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.00033440739257450236`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.3868631798468569}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.0005300000000000001, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 0.5}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.0008399933920043907, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.6131368201531432}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.0013312998087000789`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.7152527510491988}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.0021099680039335365`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.7992399910868982}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.0033440739257450235`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.8631931113967899}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.005300000000000002, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.9090909090909092}}], "ActualOutput" -> 
      HoldForm[{{
         1.523272399500685, 0, 0.089, 4.500000000000003*^-6, 0, 0.053, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.09090909090909098}, {
         1.523272399500685, 0, 0.089, 7.132019366075018*^-6, 0, 0.053, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.13680688860321014`}, {
         1.523272399500685, 0, 0.089, 0.000011303488941793127`, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.20076000891310197`}, {
         1.523272399500685, 0, 0.089, 0.000017914822674907372`, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.2847472489508014}, {
         1.523272399500685, 0, 0.089, 0.000028393080501608703`, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.3868631798468571}, {
         1.523272399500685, 0, 0.089, 0.00004500000000000003, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.5000000000000002}, {
         1.523272399500685, 0, 0.089, 0.00007132019366075018, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.6131368201531433}, {
         1.523272399500685, 0, 0.089, 0.00011303488941793127`, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.7152527510491989}, {
         1.523272399500685, 0, 0.089, 0.0001791482267490739, 0, 0.053, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.7992399910868984}, {
         1.523272399500685, 0, 0.089, 0.00028393080501608705`, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.86319311139679}, {
         1.523272399500685, 0, 0.089, 0.00045000000000000026`, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_nad.txt", 
          0.9090909090909093}, {
         1.523272399500685, 0, 0.00008900000000000009, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.090909090909091}, {
         1.523272399500685, 0, 0.00014105549412903932`, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.13680688860321016`}, {
         1.523272399500685, 0, 0.00022355789240435282`, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.20076000891310186`}, {
         1.523272399500685, 0, 0.000354315381792613, 0.0045, 0, 0.053, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.2847472489508016}, {
         1.523272399500685, 0, 0.0005615520365873723, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.38686317984685703`}, {
         1.523272399500685, 0, 0.0008900000000000009, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.5000000000000002}, {
         1.523272399500685, 0, 0.0014105549412903931`, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.6131368201531434}, {
         1.523272399500685, 0, 0.0022355789240435303`, 0.0045, 0, 0.053, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.7152527510491988}, {
         1.523272399500685, 0, 0.00354315381792613, 0.0045, 0, 0.053, 1, 8.9, 
          22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.7992399910868984}, {
         1.523272399500685, 0, 0.005615520365873723, 0.0045, 0, 0.053, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.86319311139679}, {
         1.523272399500685, 0, 0.008900000000000009, 0.0045, 0, 0.053, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_g3p.txt", 
          0.9090909090909092}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.000053000000000000014`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.09090909090909093}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.00008399933920043907, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.13680688860321005`}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.00013312998087000775`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.20076000891310172`}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.00021099680039335364`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.28474724895080145`}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.00033440739257450236`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.3868631798468569}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.0005300000000000001, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 0.5}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.0008399933920043907, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.6131368201531432}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.0013312998087000789`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.7152527510491988}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.0021099680039335365`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.7992399910868982}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.0033440739257450235`, 1, 
          8.9, 22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.8631931113967899}, {
         1.523272399500685, 0, 0.089, 0.0045, 0, 0.005300000000000002, 1, 8.9,
           22., "test_files/simulate_data/relRateFor_pi.txt", 
          0.9090909090909092}}], "ExpectedMessages" -> {}, 
      "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      Quantity[0.050659`4.8551716104723, "Seconds"], "CPUTimeUsed" -> 
      Quantity[0.04800000000000182, "Seconds"], "MemoryUsed" -> 
      Quantity[3026584, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {3., 9.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateKmDataKeqVal\"\>",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateKmDataKeqVal\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["result",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0.000109`2.1879414957726158","\"s\"","seconds",
                    "\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 2, "TestID" -> "simulateKmDataKeqVal", "Outcome" -> 
      "Success", "Input" -> HoldForm[$CellContext`result], "ExpectedOutput" -> 
      HoldForm[{{
         0.408, 0, 0.089, 4.500000000000003*^-6, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.09090909090909098}, {
         0.408, 0, 0.089, 7.132019366075018*^-6, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.13680688860321014`}, {
         0.408, 0, 0.089, 0.000011303488941793127`, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.20076000891310197`}, {
         0.408, 0, 0.089, 0.000017914822674907372`, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.2847472489508014}, {
         0.408, 0, 0.089, 0.000028393080501608703`, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.3868631798468571}, {
         0.408, 0, 0.089, 0.00004500000000000003, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.5000000000000002}, {
         0.408, 0, 0.089, 0.00007132019366075018, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.6131368201531433}, {
         0.408, 0, 0.089, 0.00011303488941793127`, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.7152527510491989}, {
         0.408, 0, 0.089, 0.0001791482267490739, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.7992399910868984}, {
         0.408, 0, 0.089, 0.00028393080501608705`, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 0.86319311139679}, {
         0.408, 0, 0.089, 0.00045000000000000026`, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.9090909090909093}, {
         0.408, 0, 0.00008900000000000009, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 0.090909090909091}, {
         0.408, 0, 0.00014105549412903932`, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.13680688860321016`}, {
         0.408, 0, 0.00022355789240435282`, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.20076000891310186`}, {
         0.408, 0, 0.000354315381792613, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.2847472489508016}, {
         0.408, 0, 0.0005615520365873723, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.38686317984685703`}, {
         0.408, 0, 0.0008900000000000009, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.5000000000000002}, {
         0.408, 0, 0.0014105549412903931`, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.6131368201531434}, {
         0.408, 0, 0.0022355789240435303`, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.7152527510491988}, {
         0.408, 0, 0.00354315381792613, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.7992399910868984}, {
         0.408, 0, 0.005615520365873723, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 0.86319311139679}, {
         0.408, 0, 0.008900000000000009, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.9090909090909092}, {
         0.408, 0, 0.089, 0.0045, 0, 0.000053000000000000014`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 
          0.09090909090909093}, {
         0.408, 0, 0.089, 0.0045, 0, 0.00008399933920043907, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 
          0.13680688860321005`}, {
         0.408, 0, 0.089, 0.0045, 0, 0.00013312998087000775`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 
          0.20076000891310172`}, {
         0.408, 0, 0.089, 0.0045, 0, 0.00021099680039335364`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 
          0.28474724895080145`}, {
         0.408, 0, 0.089, 0.0045, 0, 0.00033440739257450236`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.3868631798468569}, {
         0.408, 0, 0.089, 0.0045, 0, 0.0005300000000000001, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.5}, {
         0.408, 0, 0.089, 0.0045, 0, 0.0008399933920043907, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.6131368201531432}, {
         0.408, 0, 0.089, 0.0045, 0, 0.0013312998087000789`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.7152527510491988}, {
         0.408, 0, 0.089, 0.0045, 0, 0.0021099680039335365`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.7992399910868982}, {
         0.408, 0, 0.089, 0.0045, 0, 0.0033440739257450235`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.8631931113967899}, {
         0.408, 0, 0.089, 0.0045, 0, 0.005300000000000002, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.9090909090909092}}],
       "ActualOutput" -> 
      HoldForm[{{
         0.408, 0, 0.089, 4.500000000000003*^-6, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.09090909090909098}, {
         0.408, 0, 0.089, 7.132019366075018*^-6, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.13680688860321014`}, {
         0.408, 0, 0.089, 0.000011303488941793127`, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.20076000891310197`}, {
         0.408, 0, 0.089, 0.000017914822674907372`, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.2847472489508014}, {
         0.408, 0, 0.089, 0.000028393080501608703`, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.3868631798468571}, {
         0.408, 0, 0.089, 0.00004500000000000003, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.5000000000000002}, {
         0.408, 0, 0.089, 0.00007132019366075018, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.6131368201531433}, {
         0.408, 0, 0.089, 0.00011303488941793127`, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.7152527510491989}, {
         0.408, 0, 0.089, 0.0001791482267490739, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.7992399910868984}, {
         0.408, 0, 0.089, 0.00028393080501608705`, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 0.86319311139679}, {
         0.408, 0, 0.089, 0.00045000000000000026`, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_nad.txt", 
          0.9090909090909093}, {
         0.408, 0, 0.00008900000000000009, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 0.090909090909091}, {
         0.408, 0, 0.00014105549412903932`, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.13680688860321016`}, {
         0.408, 0, 0.00022355789240435282`, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.20076000891310186`}, {
         0.408, 0, 0.000354315381792613, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.2847472489508016}, {
         0.408, 0, 0.0005615520365873723, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.38686317984685703`}, {
         0.408, 0, 0.0008900000000000009, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.5000000000000002}, {
         0.408, 0, 0.0014105549412903931`, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.6131368201531434}, {
         0.408, 0, 0.0022355789240435303`, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.7152527510491988}, {
         0.408, 0, 0.00354315381792613, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.7992399910868984}, {
         0.408, 0, 0.005615520365873723, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 0.86319311139679}, {
         0.408, 0, 0.008900000000000009, 0.0045, 0, 0.053, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          0.9090909090909092}, {
         0.408, 0, 0.089, 0.0045, 0, 0.000053000000000000014`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 
          0.09090909090909093}, {
         0.408, 0, 0.089, 0.0045, 0, 0.00008399933920043907, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 
          0.13680688860321005`}, {
         0.408, 0, 0.089, 0.0045, 0, 0.00013312998087000775`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 
          0.20076000891310172`}, {
         0.408, 0, 0.089, 0.0045, 0, 0.00021099680039335364`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 
          0.28474724895080145`}, {
         0.408, 0, 0.089, 0.0045, 0, 0.00033440739257450236`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.3868631798468569}, {
         0.408, 0, 0.089, 0.0045, 0, 0.0005300000000000001, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.5}, {
         0.408, 0, 0.089, 0.0045, 0, 0.0008399933920043907, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.6131368201531432}, {
         0.408, 0, 0.089, 0.0045, 0, 0.0013312998087000789`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.7152527510491988}, {
         0.408, 0, 0.089, 0.0045, 0, 0.0021099680039335365`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.7992399910868982}, {
         0.408, 0, 0.089, 0.0045, 0, 0.0033440739257450235`, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.8631931113967899}, {
         0.408, 0, 0.089, 0.0045, 0, 0.005300000000000002, 1, 8.9, 22., 
          "test_files/simulate_data/relRateFor_pi.txt", 0.9090909090909092}}],
       "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      Quantity[0.000109`2.1879414957726158, "Seconds"], "CPUTimeUsed" -> 
      Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[96, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {3., 9.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateKmDataKeqValNonSubstrate\"\>",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateKmDataKeqValNonSubstrate\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["result",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0.000135`2.280848766326996","\"s\"","seconds",
                    "\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 3, "TestID" -> "simulateKmDataKeqValNonSubstrate", 
      "Outcome" -> "Success", "Input" -> HoldForm[$CellContext`result], 
      "ExpectedOutput" -> 
      HoldForm[{{
         0.8403361344537815, 0, 0, 3.7999999999999996`*^-6, 0.01, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.09090909090909093}, {
         0.8403361344537815, 0, 0, 6.022594131352233*^-6, 0.01, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.13680688860321005`}, {
         0.8403361344537815, 0, 0, 9.545168439736411*^-6, 0.01, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.2007600089131019}, {
         0.8403361344537815, 0, 0, 0.000015128072481032882`, 0.01, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.2847472489508012}, {
         0.8403361344537815, 0, 0, 0.00002397637909024733, 0.01, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.3868631798468568}, {
         0.8403361344537815, 0, 0, 0.000037999999999999995`, 0.01, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_g3p.txt", 0.5}, {
         0.8403361344537815, 0, 0, 0.000060225941313522335`, 0.01, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.6131368201531432}, {
         0.8403361344537815, 0, 0, 0.00009545168439736412, 0.01, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.7152527510491987}, {
         0.8403361344537815, 0, 0, 0.00015128072481032897`, 0.01, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.7992399910868984}, {
         0.8403361344537815, 0, 0, 0.0002397637909024733, 0.01, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.86319311139679}, {
         0.8403361344537815, 0, 0, 0.00037999999999999997`, 0.01, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.9090909090909091}, {
         0.8403361344537815, 9.000000000000007*^-6, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.09090909090909098}, {
         0.8403361344537815, 0.000014264038732150038`, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.13680688860321014`}, {
         0.8403361344537815, 0.000022606977883586257`, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.20076000891310197`}, {
         0.8403361344537815, 0.00003582964534981475, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.2847472489508014}, {
         0.8403361344537815, 0.00005678616100321741, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.38686317984685703`}, {
         0.8403361344537815, 0.00009000000000000007, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.5000000000000002}, {
         0.8403361344537815, 0.00014264038732150037`, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.6131368201531432}, {
         0.8403361344537815, 0.00022606977883586258`, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.7152527510491988}, {
         0.8403361344537815, 0.00035829645349814786`, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.7992399910868985}, {
         0.8403361344537815, 0.0005678616100321741, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.86319311139679}, {
         0.8403361344537815, 0.0009000000000000007, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.9090909090909093}, {
         0.8403361344537815, 0.01, 0.00011999999999999995`, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.09090909090909087}, {
         0.8403361344537815, 0.01, 0.00019018718309533363`, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.13680688860321}, {
         0.8403361344537815, 0.01, 0.0003014263717811494, 0, 0, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.20076000891310164`}, {
         0.8403361344537815, 0.01, 0.0004777286046641966, 0, 0, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.28474724895080133`}, {
         0.8403361344537815, 0.01, 0.0007571488133762321, 0, 0, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.386863179846857}, {
         0.8403361344537815, 0.01, 0.0011999999999999995`, 0, 0, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.49999999999999994`}, {
         0.8403361344537815, 0.01, 0.0019018718309533362`, 0, 0, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.613136820153143}, {
         0.8403361344537815, 0.01, 0.0030142637178114944`, 0, 0, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.7152527510491984}, {
         0.8403361344537815, 0.01, 0.004777286046641966, 0, 0, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.7992399910868981}, {
         0.8403361344537815, 0.01, 0.007571488133762321, 0, 0, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.8631931113967899}, {
         0.8403361344537815, 0.01, 0.011999999999999995`, 0, 0, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.9090909090909092}, {
         0.8403361344537815, 0, 0, 0.0038, 0.0000285, 0.01, 1, 8.5, 30., 
          "test_files/simulate_data/relRateRev_s7p.txt", 
          0.09090909090909093}, {
         0.8403361344537815, 0, 0, 0.0038, 0.000045169455985141756`, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.13680688860321005`}, {
         0.8403361344537815, 0, 0, 0.0038, 0.00007158876329802309, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.2007600089131019}, {
         0.8403361344537815, 0, 0, 0.0038, 0.00011346054360774674`, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.28474724895080145`}, {
         0.8403361344537815, 0, 0, 0.0038, 0.000179822843176855, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.38686317984685686`}, {
         0.8403361344537815, 0, 0, 0.0038, 0.000285, 0.01, 1, 8.5, 30., 
          "test_files/simulate_data/relRateRev_s7p.txt", 0.5}, {
         0.8403361344537815, 0, 0, 0.0038, 0.00045169455985141755`, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.6131368201531432}, {
         0.8403361344537815, 0, 0, 0.0038, 0.000715887632980231, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.7152527510491988}, {
         0.8403361344537815, 0, 0, 0.0038, 0.0011346054360774674`, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.7992399910868982}, {
         0.8403361344537815, 0, 0, 0.0038, 0.00179822843176855, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.86319311139679}, {
         0.8403361344537815, 0, 0, 0.0038, 0.00285, 0.01, 1, 8.5, 30., 
          "test_files/simulate_data/relRateRev_s7p.txt", 
          0.9090909090909091}}], "ActualOutput" -> 
      HoldForm[{{
         0.8403361344537815, 0, 0, 3.7999999999999996`*^-6, 0.01, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.09090909090909093}, {
         0.8403361344537815, 0, 0, 6.022594131352233*^-6, 0.01, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.13680688860321005`}, {
         0.8403361344537815, 0, 0, 9.545168439736411*^-6, 0.01, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.2007600089131019}, {
         0.8403361344537815, 0, 0, 0.000015128072481032882`, 0.01, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.2847472489508012}, {
         0.8403361344537815, 0, 0, 0.00002397637909024733, 0.01, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.3868631798468568}, {
         0.8403361344537815, 0, 0, 0.000037999999999999995`, 0.01, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_g3p.txt", 0.5}, {
         0.8403361344537815, 0, 0, 0.000060225941313522335`, 0.01, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.6131368201531432}, {
         0.8403361344537815, 0, 0, 0.00009545168439736412, 0.01, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.7152527510491987}, {
         0.8403361344537815, 0, 0, 0.00015128072481032897`, 0.01, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.7992399910868984}, {
         0.8403361344537815, 0, 0, 0.0002397637909024733, 0.01, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.86319311139679}, {
         0.8403361344537815, 0, 0, 0.00037999999999999997`, 0.01, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_g3p.txt", 
          0.9090909090909091}, {
         0.8403361344537815, 9.000000000000007*^-6, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.09090909090909098}, {
         0.8403361344537815, 0.000014264038732150038`, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.13680688860321014`}, {
         0.8403361344537815, 0.000022606977883586257`, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.20076000891310197`}, {
         0.8403361344537815, 0.00003582964534981475, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.2847472489508014}, {
         0.8403361344537815, 0.00005678616100321741, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.38686317984685703`}, {
         0.8403361344537815, 0.00009000000000000007, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.5000000000000002}, {
         0.8403361344537815, 0.00014264038732150037`, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.6131368201531432}, {
         0.8403361344537815, 0.00022606977883586258`, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.7152527510491988}, {
         0.8403361344537815, 0.00035829645349814786`, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.7992399910868985}, {
         0.8403361344537815, 0.0005678616100321741, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.86319311139679}, {
         0.8403361344537815, 0.0009000000000000007, 0.0285, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_e4p.txt", 
          0.9090909090909093}, {
         0.8403361344537815, 0.01, 0.00011999999999999995`, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.09090909090909087}, {
         0.8403361344537815, 0.01, 0.00019018718309533363`, 0, 0, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.13680688860321}, {
         0.8403361344537815, 0.01, 0.0003014263717811494, 0, 0, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.20076000891310164`}, {
         0.8403361344537815, 0.01, 0.0004777286046641966, 0, 0, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.28474724895080133`}, {
         0.8403361344537815, 0.01, 0.0007571488133762321, 0, 0, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.386863179846857}, {
         0.8403361344537815, 0.01, 0.0011999999999999995`, 0, 0, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.49999999999999994`}, {
         0.8403361344537815, 0.01, 0.0019018718309533362`, 0, 0, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.613136820153143}, {
         0.8403361344537815, 0.01, 0.0030142637178114944`, 0, 0, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.7152527510491984}, {
         0.8403361344537815, 0.01, 0.004777286046641966, 0, 0, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.7992399910868981}, {
         0.8403361344537815, 0.01, 0.007571488133762321, 0, 0, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.8631931113967899}, {
         0.8403361344537815, 0.01, 0.011999999999999995`, 0, 0, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateFor_f6p.txt", 
          0.9090909090909092}, {
         0.8403361344537815, 0, 0, 0.0038, 0.0000285, 0.01, 1, 8.5, 30., 
          "test_files/simulate_data/relRateRev_s7p.txt", 
          0.09090909090909093}, {
         0.8403361344537815, 0, 0, 0.0038, 0.000045169455985141756`, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.13680688860321005`}, {
         0.8403361344537815, 0, 0, 0.0038, 0.00007158876329802309, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.2007600089131019}, {
         0.8403361344537815, 0, 0, 0.0038, 0.00011346054360774674`, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.28474724895080145`}, {
         0.8403361344537815, 0, 0, 0.0038, 0.000179822843176855, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.38686317984685686`}, {
         0.8403361344537815, 0, 0, 0.0038, 0.000285, 0.01, 1, 8.5, 30., 
          "test_files/simulate_data/relRateRev_s7p.txt", 0.5}, {
         0.8403361344537815, 0, 0, 0.0038, 0.00045169455985141755`, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.6131368201531432}, {
         0.8403361344537815, 0, 0, 0.0038, 0.000715887632980231, 0.01, 1, 8.5,
           30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.7152527510491988}, {
         0.8403361344537815, 0, 0, 0.0038, 0.0011346054360774674`, 0.01, 1, 
          8.5, 30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.7992399910868982}, {
         0.8403361344537815, 0, 0, 0.0038, 0.00179822843176855, 0.01, 1, 8.5, 
          30., "test_files/simulate_data/relRateRev_s7p.txt", 
          0.86319311139679}, {
         0.8403361344537815, 0, 0, 0.0038, 0.00285, 0.01, 1, 8.5, 30., 
          "test_files/simulate_data/relRateRev_s7p.txt", 
          0.9090909090909091}}], "ExpectedMessages" -> {}, 
      "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      Quantity[0.000135`2.280848766326996, "Seconds"], "CPUTimeUsed" -> 
      Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[104, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {3., 9.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateKcatDataNoKeqVal\"\>",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateKcatDataNoKeqVal\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["result",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1.523272399500685`", ",", "0", ",", "0.01`", ",", 
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",",
                     "22.`", 
                    ",", "\<\"test_files/simulate_data/absRateFor.txt\"\>", 
                    ",", "268.`"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1.523272399500685`", ",", "0", ",", "0.01`", ",", 
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}], ",",
                     "22.`", 
                    ",", "\<\"test_files/simulate_data/absRateFor.txt\"\>", 
                    ",", "268.`"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0.000098`2.1417410735244884","\"s\"","seconds",
                    "\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 4, "TestID" -> "simulateKcatDataNoKeqVal", "Outcome" -> 
      "Success", "Input" -> HoldForm[$CellContext`result], "ExpectedOutput" -> 
      HoldForm[{{
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}}], "ActualOutput" -> 
      HoldForm[{{
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         1.523272399500685, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}}], 
      "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      Quantity[0.000098`2.1417410735244884, "Seconds"], "CPUTimeUsed" -> 
      Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {3., 9.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateKcatDataKeqVal\"\>",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateKcatDataKeqVal\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["result",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0.00011`2.191907682990214","\"s\"","seconds",
                    "\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 5, "TestID" -> "simulateKcatDataKeqVal", "Outcome" -> 
      "Success", "Input" -> HoldForm[$CellContext`result], "ExpectedOutput" -> 
      HoldForm[{{
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}}], "ActualOutput" -> 
      HoldForm[{{
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}, {
         0.408, 0, 0.01, 0.01, 0, 0.01, 1, 8.9, 22., 
          "test_files/simulate_data/absRateFor.txt", 268.}}], 
      "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      Quantity[0.00011`2.191907682990214, "Seconds"], "CPUTimeUsed" -> 
      Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {3., 9.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateRateConstRatiosDataKd\"\>",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateRateConstRatiosDataKd\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["result",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.408`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "1", ",", "8.9`", ",", "22", 
                    ",", "\<\"test_files/simulate_data/KdRatio.txt\"\>", ",", 
                    "3.2`*^-7"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.408`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "1", ",", "8.9`", ",", "22", 
                    ",", "\<\"test_files/simulate_data/KdRatio.txt\"\>", ",", 
                    "3.2`*^-7"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0.0001`2.150514997831992","\"s\"","seconds","\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 6, "TestID" -> "simulateRateConstRatiosDataKd", "Outcome" -> 
      "Success", "Input" -> HoldForm[$CellContext`result], "ExpectedOutput" -> 
      HoldForm[{{{
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}}, {
         "test_files/simulate_data/absRateFor.txt", 
          "test_files/simulate_data/absRateRev.txt", 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          "test_files/simulate_data/relRateFor_nad.txt", 
          "test_files/simulate_data/relRateFor_pi.txt", 
          "test_files/simulate_data/relRateRev_13dpg.txt", 
          "test_files/simulate_data/relRateRev_nadh.txt", 
          "test_files/simulate_data/KdRatio.txt"}, {
         "test_files/simulate_data/absRateFor.txt" -> 
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["nad", "c"] 
           Toolbox`metabolite["pi", "c"] Toolbox`parameter["E_total"] 
           Toolbox`rateconst["GAPD1", True] Toolbox`rateconst["GAPD2", True] 
           Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
           Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True]/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/absRateRev.txt" -> 
          Toolbox`metabolite["13dpg", "c"] Toolbox`metabolite["nadh", "c"] 
           Toolbox`parameter["E_total"] Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", False] 
           Toolbox`rateconst["GAPD3", False] 
           Toolbox`rateconst["GAPD4", False] 
           Toolbox`rateconst["GAPD5", False] 
           Toolbox`rateconst["GAPD6", False]/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_g3p.txt" -> 
          Toolbox`metabolite["g3p", "c"] 
           Toolbox`rateconst["GAPD3", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD2", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`metabolite["nad", "c"] 
             Toolbox`rateconst["GAPD1", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD2", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_nad.txt" -> 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_pi.txt" -> 
          Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst[
            "GAPD5", 
             True] ((Toolbox`rateconst["GAPD1", False] + 
              Toolbox`metabolite["nad", "c"] Toolbox`rateconst["GAPD1", True])
               Toolbox`rateconst["GAPD2", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`metabolite["g3p", "c"] 
             Toolbox`rateconst["GAPD3", True] (
              Toolbox`rateconst["GAPD2", True] 
               Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`metabolite["nad", "c"] 
               Toolbox`rateconst["GAPD1", True] (
                Toolbox`rateconst["GAPD4", True] 
                 Toolbox`rateconst["GAPD6", True] + 
                Toolbox`rateconst["GAPD2", True] (
                  Toolbox`rateconst["GAPD4", True] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateRev_13dpg.txt" -> 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateRev_nadh.txt" -> 
          Toolbox`metabolite["nadh", "c"] 
           Toolbox`rateconst["GAPD4", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`metabolite["13dpg", "c"] 
             Toolbox`rateconst["GAPD2", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/KdRatio.txt" -> 
          Toolbox`rateconst["GAPD1", False]/Toolbox`rateconst[
           "GAPD1", True]}, {
         "absRateFor", "absRateRev", "relRateFor_g3p", "relRateFor_nad", 
          "relRateFor_pi", "relRateRev_13dpg", "relRateRev_nadh", 
          "KdRatio"}, {
         Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["nad", "c"] 
          Toolbox`metabolite["pi", "c"] Toolbox`parameter["E_total"] 
          Toolbox`rateconst["GAPD1", True] Toolbox`rateconst["GAPD2", True] 
          Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
          Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True]/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["13dpg", "c"] Toolbox`metabolite["nadh", "c"] 
          Toolbox`parameter["E_total"] Toolbox`rateconst["GAPD1", False] 
          Toolbox`rateconst["GAPD2", False] Toolbox`rateconst["GAPD3", False] 
          Toolbox`rateconst["GAPD4", False] Toolbox`rateconst["GAPD5", False] 
          Toolbox`rateconst["GAPD6", False]/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["g3p", "c"] 
          Toolbox`rateconst["GAPD3", True] (
           Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD2", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] + 
                 Toolbox`rateconst["GAPD6", True]) + 
               Toolbox`metabolite["pi", "c"] 
                Toolbox`rateconst["GAPD5", True] (
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["nad", "c"] 
          Toolbox`rateconst["GAPD1", True] (
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
            Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["g3p", "c"] 
              Toolbox`rateconst["GAPD3", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] + 
                 Toolbox`rateconst["GAPD6", True]) + 
               Toolbox`metabolite["pi", "c"] 
                Toolbox`rateconst["GAPD5", True] (
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["pi", "c"] 
          Toolbox`rateconst[
           "GAPD5", 
            True] ((Toolbox`rateconst["GAPD1", False] + 
             Toolbox`metabolite["nad", "c"] Toolbox`rateconst["GAPD1", True]) 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD4", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`metabolite["g3p", "c"] 
            Toolbox`rateconst["GAPD3", True] (
             Toolbox`rateconst["GAPD2", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`metabolite["nad", "c"] 
              Toolbox`rateconst["GAPD1", True] (
               Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD2", True] (
                 Toolbox`rateconst["GAPD4", True] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["13dpg", "c"] 
          Toolbox`rateconst["GAPD2", False] (
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD4", True] (
               Toolbox`rateconst["GAPD5", False] + 
               Toolbox`rateconst["GAPD6", True])) + 
           Toolbox`metabolite["nadh", "c"] 
            Toolbox`rateconst["GAPD4", False] (
             Toolbox`rateconst["GAPD3", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD1", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["nadh", "c"] 
          Toolbox`rateconst["GAPD4", False] (
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] 
            Toolbox`rateconst["GAPD5", False] 
            Toolbox`rateconst["GAPD6", False] + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD3", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD1", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`rateconst["GAPD1", False]/Toolbox`rateconst[
          "GAPD1", True]}, {
         "(d[2]*d[3]*d[5]*d[6]*x[1]*x[11]*x[3]*x[5]*x[7]*x[9])/(d[2]*d[5]*x[\
11]*x[3]*x[5]*x[7]*x[9] + x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) \
+ d[5]*x[11]*x[7]*x[9]) + d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + \
x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + \
d[2]*x[5]*(x[10]*x[8] + d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))", 
          "(d[1]*d[4]*d[6]*x[0]*x[10]*x[2]*x[4]*x[6]*x[8])/(x[0]*x[4]*(d[4]*x[\
10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + x[8]))) + \
d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(d[2]*x[5]*(d[5]*x[11]*x[3]*x[7]*x[9] + \
d[3]*x[1]*(d[5]*x[11]*x[7]*x[9] + x[3]*(x[10]*x[8] + d[5]*(x[10] + \
x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + \
x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + \
d[2]*x[5]*(x[10]*x[8] + d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[5]*((x[0] + d[3]*x[1])*x[11]*x[3]*x[7] + \
d[2]*x[5]*(x[11]*x[3]*x[7] + d[3]*x[1]*(x[11]*x[7] + x[3]*(x[10] + x[11] + \
x[7]))))*x[9])/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))/(x[0]*x[4]*(d[4]*x[10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + \
x[8]))) + d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(d[4]*x[6]*(x[0]*x[10]*x[4]*x[8] + d[1]*x[2]*(x[10]*x[4]*x[8] + \
x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))/(x[0]*x[4]*(d[4]*x[10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + \
x[8]))) + d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", "x[0]/x[1]"}}], "ActualOutput" -> 
      HoldForm[{{{
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/KdRatio.txt", 3.2*^-7}}, {
         "test_files/simulate_data/absRateFor.txt", 
          "test_files/simulate_data/absRateRev.txt", 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          "test_files/simulate_data/relRateFor_nad.txt", 
          "test_files/simulate_data/relRateFor_pi.txt", 
          "test_files/simulate_data/relRateRev_13dpg.txt", 
          "test_files/simulate_data/relRateRev_nadh.txt", 
          "test_files/simulate_data/KdRatio.txt"}, {
         "test_files/simulate_data/absRateFor.txt" -> 
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["nad", "c"] 
           Toolbox`metabolite["pi", "c"] Toolbox`parameter["E_total"] 
           Toolbox`rateconst["GAPD1", True] Toolbox`rateconst["GAPD2", True] 
           Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
           Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True]/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/absRateRev.txt" -> 
          Toolbox`metabolite["13dpg", "c"] Toolbox`metabolite["nadh", "c"] 
           Toolbox`parameter["E_total"] Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", False] 
           Toolbox`rateconst["GAPD3", False] 
           Toolbox`rateconst["GAPD4", False] 
           Toolbox`rateconst["GAPD5", False] 
           Toolbox`rateconst["GAPD6", False]/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_g3p.txt" -> 
          Toolbox`metabolite["g3p", "c"] 
           Toolbox`rateconst["GAPD3", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD2", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`metabolite["nad", "c"] 
             Toolbox`rateconst["GAPD1", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD2", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_nad.txt" -> 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_pi.txt" -> 
          Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst[
            "GAPD5", 
             True] ((Toolbox`rateconst["GAPD1", False] + 
              Toolbox`metabolite["nad", "c"] Toolbox`rateconst["GAPD1", True])
               Toolbox`rateconst["GAPD2", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`metabolite["g3p", "c"] 
             Toolbox`rateconst["GAPD3", True] (
              Toolbox`rateconst["GAPD2", True] 
               Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`metabolite["nad", "c"] 
               Toolbox`rateconst["GAPD1", True] (
                Toolbox`rateconst["GAPD4", True] 
                 Toolbox`rateconst["GAPD6", True] + 
                Toolbox`rateconst["GAPD2", True] (
                  Toolbox`rateconst["GAPD4", True] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateRev_13dpg.txt" -> 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateRev_nadh.txt" -> 
          Toolbox`metabolite["nadh", "c"] 
           Toolbox`rateconst["GAPD4", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`metabolite["13dpg", "c"] 
             Toolbox`rateconst["GAPD2", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/KdRatio.txt" -> 
          Toolbox`rateconst["GAPD1", False]/Toolbox`rateconst[
           "GAPD1", True]}, {
         "absRateFor", "absRateRev", "relRateFor_g3p", "relRateFor_nad", 
          "relRateFor_pi", "relRateRev_13dpg", "relRateRev_nadh", 
          "KdRatio"}, {
         Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["nad", "c"] 
          Toolbox`metabolite["pi", "c"] Toolbox`parameter["E_total"] 
          Toolbox`rateconst["GAPD1", True] Toolbox`rateconst["GAPD2", True] 
          Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
          Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True]/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["13dpg", "c"] Toolbox`metabolite["nadh", "c"] 
          Toolbox`parameter["E_total"] Toolbox`rateconst["GAPD1", False] 
          Toolbox`rateconst["GAPD2", False] Toolbox`rateconst["GAPD3", False] 
          Toolbox`rateconst["GAPD4", False] Toolbox`rateconst["GAPD5", False] 
          Toolbox`rateconst["GAPD6", False]/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["g3p", "c"] 
          Toolbox`rateconst["GAPD3", True] (
           Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD2", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] + 
                 Toolbox`rateconst["GAPD6", True]) + 
               Toolbox`metabolite["pi", "c"] 
                Toolbox`rateconst["GAPD5", True] (
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["nad", "c"] 
          Toolbox`rateconst["GAPD1", True] (
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
            Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["g3p", "c"] 
              Toolbox`rateconst["GAPD3", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] + 
                 Toolbox`rateconst["GAPD6", True]) + 
               Toolbox`metabolite["pi", "c"] 
                Toolbox`rateconst["GAPD5", True] (
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["pi", "c"] 
          Toolbox`rateconst[
           "GAPD5", 
            True] ((Toolbox`rateconst["GAPD1", False] + 
             Toolbox`metabolite["nad", "c"] Toolbox`rateconst["GAPD1", True]) 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD4", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`metabolite["g3p", "c"] 
            Toolbox`rateconst["GAPD3", True] (
             Toolbox`rateconst["GAPD2", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`metabolite["nad", "c"] 
              Toolbox`rateconst["GAPD1", True] (
               Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD2", True] (
                 Toolbox`rateconst["GAPD4", True] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["13dpg", "c"] 
          Toolbox`rateconst["GAPD2", False] (
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD4", True] (
               Toolbox`rateconst["GAPD5", False] + 
               Toolbox`rateconst["GAPD6", True])) + 
           Toolbox`metabolite["nadh", "c"] 
            Toolbox`rateconst["GAPD4", False] (
             Toolbox`rateconst["GAPD3", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD1", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["nadh", "c"] 
          Toolbox`rateconst["GAPD4", False] (
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] 
            Toolbox`rateconst["GAPD5", False] 
            Toolbox`rateconst["GAPD6", False] + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD3", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD1", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`rateconst["GAPD1", False]/Toolbox`rateconst[
          "GAPD1", True]}, {
         "(d[2]*d[3]*d[5]*d[6]*x[1]*x[11]*x[3]*x[5]*x[7]*x[9])/(d[2]*d[5]*x[\
11]*x[3]*x[5]*x[7]*x[9] + x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) \
+ d[5]*x[11]*x[7]*x[9]) + d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + \
x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + \
d[2]*x[5]*(x[10]*x[8] + d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))", 
          "(d[1]*d[4]*d[6]*x[0]*x[10]*x[2]*x[4]*x[6]*x[8])/(x[0]*x[4]*(d[4]*x[\
10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + x[8]))) + \
d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(d[2]*x[5]*(d[5]*x[11]*x[3]*x[7]*x[9] + \
d[3]*x[1]*(d[5]*x[11]*x[7]*x[9] + x[3]*(x[10]*x[8] + d[5]*(x[10] + \
x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + \
x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + \
d[2]*x[5]*(x[10]*x[8] + d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[5]*((x[0] + d[3]*x[1])*x[11]*x[3]*x[7] + \
d[2]*x[5]*(x[11]*x[3]*x[7] + d[3]*x[1]*(x[11]*x[7] + x[3]*(x[10] + x[11] + \
x[7]))))*x[9])/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))/(x[0]*x[4]*(d[4]*x[10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + \
x[8]))) + d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(d[4]*x[6]*(x[0]*x[10]*x[4]*x[8] + d[1]*x[2]*(x[10]*x[4]*x[8] + \
x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))/(x[0]*x[4]*(d[4]*x[10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + \
x[8]))) + d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", "x[0]/x[1]"}}], "ExpectedMessages" -> {}, "ActualMessages" -> {}, 
      "AbsoluteTimeUsed" -> Quantity[0.0001`2.150514997831992, "Seconds"], 
      "CPUTimeUsed" -> Quantity[0.0039999999999995595`, "Seconds"], 
      "MemoryUsed" -> Quantity[48, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {3., 9.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateRateConstRatiosDatadKd\"\>",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateRateConstRatiosDatadKd\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["result",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.408`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "1", ",", "8.9`", ",", "22", 
                    ",", "\<\"test_files/simulate_data/dKdRatio.txt\"\>", ",",
                     "425.`"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.408`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "1", ",", "8.9`", ",", "22", 
                    ",", "\<\"test_files/simulate_data/dKdRatio.txt\"\>", ",",
                     "425.`"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "4", "\[RightSkeleton]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0.000106`2.175820863096764","\"s\"","seconds",
                    "\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 7, "TestID" -> "simulateRateConstRatiosDatadKd", 
      "Outcome" -> "Success", "Input" -> HoldForm[$CellContext`result], 
      "ExpectedOutput" -> 
      HoldForm[{{{
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}}, {
         "test_files/simulate_data/absRateFor.txt", 
          "test_files/simulate_data/absRateRev.txt", 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          "test_files/simulate_data/relRateFor_nad.txt", 
          "test_files/simulate_data/relRateFor_pi.txt", 
          "test_files/simulate_data/relRateRev_13dpg.txt", 
          "test_files/simulate_data/relRateRev_nadh.txt", 
          "test_files/simulate_data/dKdRatio.txt"}, {
         "test_files/simulate_data/absRateFor.txt" -> 
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["nad", "c"] 
           Toolbox`metabolite["pi", "c"] Toolbox`parameter["E_total"] 
           Toolbox`rateconst["GAPD1", True] Toolbox`rateconst["GAPD2", True] 
           Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
           Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True]/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/absRateRev.txt" -> 
          Toolbox`metabolite["13dpg", "c"] Toolbox`metabolite["nadh", "c"] 
           Toolbox`parameter["E_total"] Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", False] 
           Toolbox`rateconst["GAPD3", False] 
           Toolbox`rateconst["GAPD4", False] 
           Toolbox`rateconst["GAPD5", False] 
           Toolbox`rateconst["GAPD6", False]/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_g3p.txt" -> 
          Toolbox`metabolite["g3p", "c"] 
           Toolbox`rateconst["GAPD3", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD2", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`metabolite["nad", "c"] 
             Toolbox`rateconst["GAPD1", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD2", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_nad.txt" -> 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_pi.txt" -> 
          Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst[
            "GAPD5", 
             True] ((Toolbox`rateconst["GAPD1", False] + 
              Toolbox`metabolite["nad", "c"] Toolbox`rateconst["GAPD1", True])
               Toolbox`rateconst["GAPD2", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`metabolite["g3p", "c"] 
             Toolbox`rateconst["GAPD3", True] (
              Toolbox`rateconst["GAPD2", True] 
               Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`metabolite["nad", "c"] 
               Toolbox`rateconst["GAPD1", True] (
                Toolbox`rateconst["GAPD4", True] 
                 Toolbox`rateconst["GAPD6", True] + 
                Toolbox`rateconst["GAPD2", True] (
                  Toolbox`rateconst["GAPD4", True] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateRev_13dpg.txt" -> 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateRev_nadh.txt" -> 
          Toolbox`metabolite["nadh", "c"] 
           Toolbox`rateconst["GAPD4", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`metabolite["13dpg", "c"] 
             Toolbox`rateconst["GAPD2", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/dKdRatio.txt" -> 
          Toolbox`rateconst["GAPD1", False]^(-1) 
           Toolbox`rateconst["GAPD1", True] 
           Toolbox`rateconst["GAPD2", False]^(-1) 
           Toolbox`rateconst["GAPD2", True] 
           Toolbox`rateconst["GAPD3", False]^(-1) 
           Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", False]^(-1) 
           Toolbox`rateconst["GAPD4", True] 
           Toolbox`rateconst["GAPD5", False]^(-1) 
           Toolbox`rateconst["GAPD5", True]}, {
         "absRateFor", "absRateRev", "relRateFor_g3p", "relRateFor_nad", 
          "relRateFor_pi", "relRateRev_13dpg", "relRateRev_nadh", 
          "dKdRatio"}, {
         Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["nad", "c"] 
          Toolbox`metabolite["pi", "c"] Toolbox`parameter["E_total"] 
          Toolbox`rateconst["GAPD1", True] Toolbox`rateconst["GAPD2", True] 
          Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
          Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True]/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["13dpg", "c"] Toolbox`metabolite["nadh", "c"] 
          Toolbox`parameter["E_total"] Toolbox`rateconst["GAPD1", False] 
          Toolbox`rateconst["GAPD2", False] Toolbox`rateconst["GAPD3", False] 
          Toolbox`rateconst["GAPD4", False] Toolbox`rateconst["GAPD5", False] 
          Toolbox`rateconst["GAPD6", False]/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["g3p", "c"] 
          Toolbox`rateconst["GAPD3", True] (
           Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD2", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] + 
                 Toolbox`rateconst["GAPD6", True]) + 
               Toolbox`metabolite["pi", "c"] 
                Toolbox`rateconst["GAPD5", True] (
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["nad", "c"] 
          Toolbox`rateconst["GAPD1", True] (
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
            Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["g3p", "c"] 
              Toolbox`rateconst["GAPD3", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] + 
                 Toolbox`rateconst["GAPD6", True]) + 
               Toolbox`metabolite["pi", "c"] 
                Toolbox`rateconst["GAPD5", True] (
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["pi", "c"] 
          Toolbox`rateconst[
           "GAPD5", 
            True] ((Toolbox`rateconst["GAPD1", False] + 
             Toolbox`metabolite["nad", "c"] Toolbox`rateconst["GAPD1", True]) 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD4", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`metabolite["g3p", "c"] 
            Toolbox`rateconst["GAPD3", True] (
             Toolbox`rateconst["GAPD2", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`metabolite["nad", "c"] 
              Toolbox`rateconst["GAPD1", True] (
               Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD2", True] (
                 Toolbox`rateconst["GAPD4", True] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["13dpg", "c"] 
          Toolbox`rateconst["GAPD2", False] (
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD4", True] (
               Toolbox`rateconst["GAPD5", False] + 
               Toolbox`rateconst["GAPD6", True])) + 
           Toolbox`metabolite["nadh", "c"] 
            Toolbox`rateconst["GAPD4", False] (
             Toolbox`rateconst["GAPD3", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD1", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["nadh", "c"] 
          Toolbox`rateconst["GAPD4", False] (
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] 
            Toolbox`rateconst["GAPD5", False] 
            Toolbox`rateconst["GAPD6", False] + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD3", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD1", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`rateconst["GAPD1", False]^(-1) 
          Toolbox`rateconst["GAPD1", True] 
          Toolbox`rateconst["GAPD2", False]^(-1) 
          Toolbox`rateconst["GAPD2", True] 
          Toolbox`rateconst["GAPD3", False]^(-1) 
          Toolbox`rateconst["GAPD3", True] 
          Toolbox`rateconst["GAPD4", False]^(-1) 
          Toolbox`rateconst["GAPD4", True] 
          Toolbox`rateconst["GAPD5", False]^(-1) 
          Toolbox`rateconst["GAPD5", True]}, {
         "(d[2]*d[3]*d[5]*d[6]*x[1]*x[11]*x[3]*x[5]*x[7]*x[9])/(d[2]*d[5]*x[\
11]*x[3]*x[5]*x[7]*x[9] + x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) \
+ d[5]*x[11]*x[7]*x[9]) + d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + \
x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + \
d[2]*x[5]*(x[10]*x[8] + d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))", 
          "(d[1]*d[4]*d[6]*x[0]*x[10]*x[2]*x[4]*x[6]*x[8])/(x[0]*x[4]*(d[4]*x[\
10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + x[8]))) + \
d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(d[2]*x[5]*(d[5]*x[11]*x[3]*x[7]*x[9] + \
d[3]*x[1]*(d[5]*x[11]*x[7]*x[9] + x[3]*(x[10]*x[8] + d[5]*(x[10] + \
x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + \
x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + \
d[2]*x[5]*(x[10]*x[8] + d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[5]*((x[0] + d[3]*x[1])*x[11]*x[3]*x[7] + \
d[2]*x[5]*(x[11]*x[3]*x[7] + d[3]*x[1]*(x[11]*x[7] + x[3]*(x[10] + x[11] + \
x[7]))))*x[9])/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))/(x[0]*x[4]*(d[4]*x[10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + \
x[8]))) + d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(d[4]*x[6]*(x[0]*x[10]*x[4]*x[8] + d[1]*x[2]*(x[10]*x[4]*x[8] + \
x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))/(x[0]*x[4]*(d[4]*x[10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + \
x[8]))) + d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", "(x[1]*x[3]*x[5]*x[7]*x[9])/(x[0]*x[2]*x[4]*x[6]*x[8])"}}], 
      "ActualOutput" -> 
      HoldForm[{{{
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/dKdRatio.txt", 425.}}, {
         "test_files/simulate_data/absRateFor.txt", 
          "test_files/simulate_data/absRateRev.txt", 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          "test_files/simulate_data/relRateFor_nad.txt", 
          "test_files/simulate_data/relRateFor_pi.txt", 
          "test_files/simulate_data/relRateRev_13dpg.txt", 
          "test_files/simulate_data/relRateRev_nadh.txt", 
          "test_files/simulate_data/dKdRatio.txt"}, {
         "test_files/simulate_data/absRateFor.txt" -> 
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["nad", "c"] 
           Toolbox`metabolite["pi", "c"] Toolbox`parameter["E_total"] 
           Toolbox`rateconst["GAPD1", True] Toolbox`rateconst["GAPD2", True] 
           Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
           Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True]/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/absRateRev.txt" -> 
          Toolbox`metabolite["13dpg", "c"] Toolbox`metabolite["nadh", "c"] 
           Toolbox`parameter["E_total"] Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", False] 
           Toolbox`rateconst["GAPD3", False] 
           Toolbox`rateconst["GAPD4", False] 
           Toolbox`rateconst["GAPD5", False] 
           Toolbox`rateconst["GAPD6", False]/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_g3p.txt" -> 
          Toolbox`metabolite["g3p", "c"] 
           Toolbox`rateconst["GAPD3", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD2", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`metabolite["nad", "c"] 
             Toolbox`rateconst["GAPD1", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD2", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_nad.txt" -> 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_pi.txt" -> 
          Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst[
            "GAPD5", 
             True] ((Toolbox`rateconst["GAPD1", False] + 
              Toolbox`metabolite["nad", "c"] Toolbox`rateconst["GAPD1", True])
               Toolbox`rateconst["GAPD2", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`metabolite["g3p", "c"] 
             Toolbox`rateconst["GAPD3", True] (
              Toolbox`rateconst["GAPD2", True] 
               Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`metabolite["nad", "c"] 
               Toolbox`rateconst["GAPD1", True] (
                Toolbox`rateconst["GAPD4", True] 
                 Toolbox`rateconst["GAPD6", True] + 
                Toolbox`rateconst["GAPD2", True] (
                  Toolbox`rateconst["GAPD4", True] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateRev_13dpg.txt" -> 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateRev_nadh.txt" -> 
          Toolbox`metabolite["nadh", "c"] 
           Toolbox`rateconst["GAPD4", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`metabolite["13dpg", "c"] 
             Toolbox`rateconst["GAPD2", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/dKdRatio.txt" -> 
          Toolbox`rateconst["GAPD1", False]^(-1) 
           Toolbox`rateconst["GAPD1", True] 
           Toolbox`rateconst["GAPD2", False]^(-1) 
           Toolbox`rateconst["GAPD2", True] 
           Toolbox`rateconst["GAPD3", False]^(-1) 
           Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", False]^(-1) 
           Toolbox`rateconst["GAPD4", True] 
           Toolbox`rateconst["GAPD5", False]^(-1) 
           Toolbox`rateconst["GAPD5", True]}, {
         "absRateFor", "absRateRev", "relRateFor_g3p", "relRateFor_nad", 
          "relRateFor_pi", "relRateRev_13dpg", "relRateRev_nadh", 
          "dKdRatio"}, {
         Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["nad", "c"] 
          Toolbox`metabolite["pi", "c"] Toolbox`parameter["E_total"] 
          Toolbox`rateconst["GAPD1", True] Toolbox`rateconst["GAPD2", True] 
          Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
          Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True]/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["13dpg", "c"] Toolbox`metabolite["nadh", "c"] 
          Toolbox`parameter["E_total"] Toolbox`rateconst["GAPD1", False] 
          Toolbox`rateconst["GAPD2", False] Toolbox`rateconst["GAPD3", False] 
          Toolbox`rateconst["GAPD4", False] Toolbox`rateconst["GAPD5", False] 
          Toolbox`rateconst["GAPD6", False]/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["g3p", "c"] 
          Toolbox`rateconst["GAPD3", True] (
           Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD2", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] + 
                 Toolbox`rateconst["GAPD6", True]) + 
               Toolbox`metabolite["pi", "c"] 
                Toolbox`rateconst["GAPD5", True] (
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["nad", "c"] 
          Toolbox`rateconst["GAPD1", True] (
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
            Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["g3p", "c"] 
              Toolbox`rateconst["GAPD3", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] + 
                 Toolbox`rateconst["GAPD6", True]) + 
               Toolbox`metabolite["pi", "c"] 
                Toolbox`rateconst["GAPD5", True] (
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["pi", "c"] 
          Toolbox`rateconst[
           "GAPD5", 
            True] ((Toolbox`rateconst["GAPD1", False] + 
             Toolbox`metabolite["nad", "c"] Toolbox`rateconst["GAPD1", True]) 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD4", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`metabolite["g3p", "c"] 
            Toolbox`rateconst["GAPD3", True] (
             Toolbox`rateconst["GAPD2", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`metabolite["nad", "c"] 
              Toolbox`rateconst["GAPD1", True] (
               Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD2", True] (
                 Toolbox`rateconst["GAPD4", True] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["13dpg", "c"] 
          Toolbox`rateconst["GAPD2", False] (
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD4", True] (
               Toolbox`rateconst["GAPD5", False] + 
               Toolbox`rateconst["GAPD6", True])) + 
           Toolbox`metabolite["nadh", "c"] 
            Toolbox`rateconst["GAPD4", False] (
             Toolbox`rateconst["GAPD3", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD1", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["nadh", "c"] 
          Toolbox`rateconst["GAPD4", False] (
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] 
            Toolbox`rateconst["GAPD5", False] 
            Toolbox`rateconst["GAPD6", False] + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD3", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD1", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`rateconst["GAPD1", False]^(-1) 
          Toolbox`rateconst["GAPD1", True] 
          Toolbox`rateconst["GAPD2", False]^(-1) 
          Toolbox`rateconst["GAPD2", True] 
          Toolbox`rateconst["GAPD3", False]^(-1) 
          Toolbox`rateconst["GAPD3", True] 
          Toolbox`rateconst["GAPD4", False]^(-1) 
          Toolbox`rateconst["GAPD4", True] 
          Toolbox`rateconst["GAPD5", False]^(-1) 
          Toolbox`rateconst["GAPD5", True]}, {
         "(d[2]*d[3]*d[5]*d[6]*x[1]*x[11]*x[3]*x[5]*x[7]*x[9])/(d[2]*d[5]*x[\
11]*x[3]*x[5]*x[7]*x[9] + x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) \
+ d[5]*x[11]*x[7]*x[9]) + d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + \
x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + \
d[2]*x[5]*(x[10]*x[8] + d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))", 
          "(d[1]*d[4]*d[6]*x[0]*x[10]*x[2]*x[4]*x[6]*x[8])/(x[0]*x[4]*(d[4]*x[\
10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + x[8]))) + \
d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(d[2]*x[5]*(d[5]*x[11]*x[3]*x[7]*x[9] + \
d[3]*x[1]*(d[5]*x[11]*x[7]*x[9] + x[3]*(x[10]*x[8] + d[5]*(x[10] + \
x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + \
x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + \
d[2]*x[5]*(x[10]*x[8] + d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[5]*((x[0] + d[3]*x[1])*x[11]*x[3]*x[7] + \
d[2]*x[5]*(x[11]*x[3]*x[7] + d[3]*x[1]*(x[11]*x[7] + x[3]*(x[10] + x[11] + \
x[7]))))*x[9])/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))/(x[0]*x[4]*(d[4]*x[10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + \
x[8]))) + d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(d[4]*x[6]*(x[0]*x[10]*x[4]*x[8] + d[1]*x[2]*(x[10]*x[4]*x[8] + \
x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))/(x[0]*x[4]*(d[4]*x[10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + \
x[8]))) + d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", "(x[1]*x[3]*x[5]*x[7]*x[9])/(x[0]*x[2]*x[4]*x[6]*x[8])"}}], 
      "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      Quantity[0.000106`2.175820863096764, "Seconds"], "CPUTimeUsed" -> 
      Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {3., 9.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateRateConstRatiosDataKeq\"\>",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateRateConstRatiosDataKeq\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["result",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.408`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "1", ",", "8.9`", ",", "22", 
                    ",", "\<\"test_files/simulate_data/haldaneRatio.txt\"\>", 
                    ",", "0.408`"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}]}], 
                   "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "0.408`", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
                    "0", ",", "1", ",", "8.9`", ",", "22", 
                    ",", "\<\"test_files/simulate_data/haldaneRatio.txt\"\>", 
                    ",", "0.408`"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "9", "\[RightSkeleton]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"\[LeftSkeleton]", "1", "\[RightSkeleton]"}], 
                    "}"}]}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "5", "\[RightSkeleton]"}]}], 
                   "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0.000115`2.2112128381856038","\"s\"","seconds",
                    "\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 8, "TestID" -> "simulateRateConstRatiosDataKeq", 
      "Outcome" -> "Success", "Input" -> HoldForm[$CellContext`result], 
      "ExpectedOutput" -> 
      HoldForm[{{{
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}}, {
         "test_files/simulate_data/absRateFor.txt", 
          "test_files/simulate_data/absRateRev.txt", 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          "test_files/simulate_data/relRateFor_nad.txt", 
          "test_files/simulate_data/relRateFor_pi.txt", 
          "test_files/simulate_data/relRateRev_13dpg.txt", 
          "test_files/simulate_data/relRateRev_nadh.txt", 
          "test_files/simulate_data/haldaneRatio.txt"}, {
         "test_files/simulate_data/absRateFor.txt" -> 
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["nad", "c"] 
           Toolbox`metabolite["pi", "c"] Toolbox`parameter["E_total"] 
           Toolbox`rateconst["GAPD1", True] Toolbox`rateconst["GAPD2", True] 
           Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
           Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True]/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/absRateRev.txt" -> 
          Toolbox`metabolite["13dpg", "c"] Toolbox`metabolite["nadh", "c"] 
           Toolbox`parameter["E_total"] Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", False] 
           Toolbox`rateconst["GAPD3", False] 
           Toolbox`rateconst["GAPD4", False] 
           Toolbox`rateconst["GAPD5", False] 
           Toolbox`rateconst["GAPD6", False]/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_g3p.txt" -> 
          Toolbox`metabolite["g3p", "c"] 
           Toolbox`rateconst["GAPD3", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD2", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`metabolite["nad", "c"] 
             Toolbox`rateconst["GAPD1", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD2", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_nad.txt" -> 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_pi.txt" -> 
          Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst[
            "GAPD5", 
             True] ((Toolbox`rateconst["GAPD1", False] + 
              Toolbox`metabolite["nad", "c"] Toolbox`rateconst["GAPD1", True])
               Toolbox`rateconst["GAPD2", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`metabolite["g3p", "c"] 
             Toolbox`rateconst["GAPD3", True] (
              Toolbox`rateconst["GAPD2", True] 
               Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`metabolite["nad", "c"] 
               Toolbox`rateconst["GAPD1", True] (
                Toolbox`rateconst["GAPD4", True] 
                 Toolbox`rateconst["GAPD6", True] + 
                Toolbox`rateconst["GAPD2", True] (
                  Toolbox`rateconst["GAPD4", True] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateRev_13dpg.txt" -> 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateRev_nadh.txt" -> 
          Toolbox`metabolite["nadh", "c"] 
           Toolbox`rateconst["GAPD4", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`metabolite["13dpg", "c"] 
             Toolbox`rateconst["GAPD2", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/haldaneRatio.txt" -> 
          Toolbox`rateconst["GAPD1", False]^(-1) 
           Toolbox`rateconst["GAPD1", True] 
           Toolbox`rateconst["GAPD2", False]^(-1) 
           Toolbox`rateconst["GAPD2", True] 
           Toolbox`rateconst["GAPD3", False]^(-1) 
           Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", False]^(-1) 
           Toolbox`rateconst["GAPD4", True] 
           Toolbox`rateconst["GAPD5", False]^(-1) 
           Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", False]^(-1) 
           Toolbox`rateconst["GAPD6", True]}, {
         "absRateFor", "absRateRev", "relRateFor_g3p", "relRateFor_nad", 
          "relRateFor_pi", "relRateRev_13dpg", "relRateRev_nadh", 
          "haldaneRatio"}, {
         Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["nad", "c"] 
          Toolbox`metabolite["pi", "c"] Toolbox`parameter["E_total"] 
          Toolbox`rateconst["GAPD1", True] Toolbox`rateconst["GAPD2", True] 
          Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
          Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True]/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["13dpg", "c"] Toolbox`metabolite["nadh", "c"] 
          Toolbox`parameter["E_total"] Toolbox`rateconst["GAPD1", False] 
          Toolbox`rateconst["GAPD2", False] Toolbox`rateconst["GAPD3", False] 
          Toolbox`rateconst["GAPD4", False] Toolbox`rateconst["GAPD5", False] 
          Toolbox`rateconst["GAPD6", False]/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["g3p", "c"] 
          Toolbox`rateconst["GAPD3", True] (
           Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD2", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] + 
                 Toolbox`rateconst["GAPD6", True]) + 
               Toolbox`metabolite["pi", "c"] 
                Toolbox`rateconst["GAPD5", True] (
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["nad", "c"] 
          Toolbox`rateconst["GAPD1", True] (
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
            Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["g3p", "c"] 
              Toolbox`rateconst["GAPD3", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] + 
                 Toolbox`rateconst["GAPD6", True]) + 
               Toolbox`metabolite["pi", "c"] 
                Toolbox`rateconst["GAPD5", True] (
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["pi", "c"] 
          Toolbox`rateconst[
           "GAPD5", 
            True] ((Toolbox`rateconst["GAPD1", False] + 
             Toolbox`metabolite["nad", "c"] Toolbox`rateconst["GAPD1", True]) 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD4", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`metabolite["g3p", "c"] 
            Toolbox`rateconst["GAPD3", True] (
             Toolbox`rateconst["GAPD2", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`metabolite["nad", "c"] 
              Toolbox`rateconst["GAPD1", True] (
               Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD2", True] (
                 Toolbox`rateconst["GAPD4", True] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["13dpg", "c"] 
          Toolbox`rateconst["GAPD2", False] (
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD4", True] (
               Toolbox`rateconst["GAPD5", False] + 
               Toolbox`rateconst["GAPD6", True])) + 
           Toolbox`metabolite["nadh", "c"] 
            Toolbox`rateconst["GAPD4", False] (
             Toolbox`rateconst["GAPD3", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD1", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["nadh", "c"] 
          Toolbox`rateconst["GAPD4", False] (
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] 
            Toolbox`rateconst["GAPD5", False] 
            Toolbox`rateconst["GAPD6", False] + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD3", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD1", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`rateconst["GAPD1", False]^(-1) 
          Toolbox`rateconst["GAPD1", True] 
          Toolbox`rateconst["GAPD2", False]^(-1) 
          Toolbox`rateconst["GAPD2", True] 
          Toolbox`rateconst["GAPD3", False]^(-1) 
          Toolbox`rateconst["GAPD3", True] 
          Toolbox`rateconst["GAPD4", False]^(-1) 
          Toolbox`rateconst["GAPD4", True] 
          Toolbox`rateconst["GAPD5", False]^(-1) 
          Toolbox`rateconst["GAPD5", True] 
          Toolbox`rateconst["GAPD6", False]^(-1) 
          Toolbox`rateconst["GAPD6", True]}, {
         "(d[2]*d[3]*d[5]*d[6]*x[1]*x[11]*x[3]*x[5]*x[7]*x[9])/(d[2]*d[5]*x[\
11]*x[3]*x[5]*x[7]*x[9] + x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) \
+ d[5]*x[11]*x[7]*x[9]) + d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + \
x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + \
d[2]*x[5]*(x[10]*x[8] + d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))", 
          "(d[1]*d[4]*d[6]*x[0]*x[10]*x[2]*x[4]*x[6]*x[8])/(x[0]*x[4]*(d[4]*x[\
10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + x[8]))) + \
d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(d[2]*x[5]*(d[5]*x[11]*x[3]*x[7]*x[9] + \
d[3]*x[1]*(d[5]*x[11]*x[7]*x[9] + x[3]*(x[10]*x[8] + d[5]*(x[10] + \
x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + \
x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + \
d[2]*x[5]*(x[10]*x[8] + d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[5]*((x[0] + d[3]*x[1])*x[11]*x[3]*x[7] + \
d[2]*x[5]*(x[11]*x[3]*x[7] + d[3]*x[1]*(x[11]*x[7] + x[3]*(x[10] + x[11] + \
x[7]))))*x[9])/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))/(x[0]*x[4]*(d[4]*x[10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + \
x[8]))) + d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(d[4]*x[6]*(x[0]*x[10]*x[4]*x[8] + d[1]*x[2]*(x[10]*x[4]*x[8] + \
x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))/(x[0]*x[4]*(d[4]*x[10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + \
x[8]))) + d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(x[1]*x[11]*x[3]*x[5]*x[7]*x[9])/(x[0]*x[10]*x[2]*x[4]*x[6]*x[8])"}\
}], "ActualOutput" -> 
      HoldForm[{{{
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}, {
          0.408, 0, 0, 0, 0, 0, 1, 8.9, 22, 
           "test_files/simulate_data/haldaneRatio.txt", 0.408}}, {
         "test_files/simulate_data/absRateFor.txt", 
          "test_files/simulate_data/absRateRev.txt", 
          "test_files/simulate_data/relRateFor_g3p.txt", 
          "test_files/simulate_data/relRateFor_nad.txt", 
          "test_files/simulate_data/relRateFor_pi.txt", 
          "test_files/simulate_data/relRateRev_13dpg.txt", 
          "test_files/simulate_data/relRateRev_nadh.txt", 
          "test_files/simulate_data/haldaneRatio.txt"}, {
         "test_files/simulate_data/absRateFor.txt" -> 
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["nad", "c"] 
           Toolbox`metabolite["pi", "c"] Toolbox`parameter["E_total"] 
           Toolbox`rateconst["GAPD1", True] Toolbox`rateconst["GAPD2", True] 
           Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
           Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True]/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/absRateRev.txt" -> 
          Toolbox`metabolite["13dpg", "c"] Toolbox`metabolite["nadh", "c"] 
           Toolbox`parameter["E_total"] Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", False] 
           Toolbox`rateconst["GAPD3", False] 
           Toolbox`rateconst["GAPD4", False] 
           Toolbox`rateconst["GAPD5", False] 
           Toolbox`rateconst["GAPD6", False]/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_g3p.txt" -> 
          Toolbox`metabolite["g3p", "c"] 
           Toolbox`rateconst["GAPD3", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD2", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`metabolite["nad", "c"] 
             Toolbox`rateconst["GAPD1", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD2", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_nad.txt" -> 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateFor_pi.txt" -> 
          Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst[
            "GAPD5", 
             True] ((Toolbox`rateconst["GAPD1", False] + 
              Toolbox`metabolite["nad", "c"] Toolbox`rateconst["GAPD1", True])
               Toolbox`rateconst["GAPD2", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`metabolite["g3p", "c"] 
             Toolbox`rateconst["GAPD3", True] (
              Toolbox`rateconst["GAPD2", True] 
               Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`metabolite["nad", "c"] 
               Toolbox`rateconst["GAPD1", True] (
                Toolbox`rateconst["GAPD4", True] 
                 Toolbox`rateconst["GAPD6", True] + 
                Toolbox`rateconst["GAPD2", True] (
                  Toolbox`rateconst["GAPD4", True] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
              Toolbox`rateconst["GAPD3", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD5", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", True])) + 
               Toolbox`metabolite["g3p", "c"] 
                Toolbox`rateconst["GAPD3", True] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD4", True] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`metabolite["pi", "c"] 
                    Toolbox`rateconst["GAPD5", True] + 
                   Toolbox`rateconst["GAPD6", True]) + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] (
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateRev_13dpg.txt" -> 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/relRateRev_nadh.txt" -> 
          Toolbox`metabolite["nadh", "c"] 
           Toolbox`rateconst["GAPD4", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`metabolite["13dpg", "c"] 
             Toolbox`rateconst["GAPD2", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))/(
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True]))) + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD1", False] 
              Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["nadh", "c"] 
              Toolbox`rateconst["GAPD4", False] (
               Toolbox`rateconst["GAPD3", False] 
                Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD1", False] (
                 Toolbox`rateconst["GAPD5", False] 
                  Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD3", False] (
                   Toolbox`rateconst["GAPD5", False] + 
                   Toolbox`rateconst["GAPD6", False] + 
                   Toolbox`rateconst["GAPD6", True]))))), 
          "test_files/simulate_data/haldaneRatio.txt" -> 
          Toolbox`rateconst["GAPD1", False]^(-1) 
           Toolbox`rateconst["GAPD1", True] 
           Toolbox`rateconst["GAPD2", False]^(-1) 
           Toolbox`rateconst["GAPD2", True] 
           Toolbox`rateconst["GAPD3", False]^(-1) 
           Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", False]^(-1) 
           Toolbox`rateconst["GAPD4", True] 
           Toolbox`rateconst["GAPD5", False]^(-1) 
           Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", False]^(-1) 
           Toolbox`rateconst["GAPD6", True]}, {
         "absRateFor", "absRateRev", "relRateFor_g3p", "relRateFor_nad", 
          "relRateFor_pi", "relRateRev_13dpg", "relRateRev_nadh", 
          "haldaneRatio"}, {
         Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["nad", "c"] 
          Toolbox`metabolite["pi", "c"] Toolbox`parameter["E_total"] 
          Toolbox`rateconst["GAPD1", True] Toolbox`rateconst["GAPD2", True] 
          Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
          Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True]/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["13dpg", "c"] Toolbox`metabolite["nadh", "c"] 
          Toolbox`parameter["E_total"] Toolbox`rateconst["GAPD1", False] 
          Toolbox`rateconst["GAPD2", False] Toolbox`rateconst["GAPD3", False] 
          Toolbox`rateconst["GAPD4", False] Toolbox`rateconst["GAPD5", False] 
          Toolbox`rateconst["GAPD6", False]/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["g3p", "c"] 
          Toolbox`rateconst["GAPD3", True] (
           Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD2", True] 
            Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`metabolite["nad", "c"] 
            Toolbox`rateconst["GAPD1", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD2", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] + 
                 Toolbox`rateconst["GAPD6", True]) + 
               Toolbox`metabolite["pi", "c"] 
                Toolbox`rateconst["GAPD5", True] (
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["nad", "c"] 
          Toolbox`rateconst["GAPD1", True] (
           Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
            Toolbox`rateconst["GAPD3", True] Toolbox`rateconst["GAPD4", True] 
            Toolbox`rateconst["GAPD5", True] Toolbox`rateconst["GAPD6", True] + 
           Toolbox`rateconst["GAPD2", True] (
             Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD5", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`rateconst["GAPD3", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", True])) + 
             Toolbox`metabolite["g3p", "c"] 
              Toolbox`rateconst["GAPD3", True] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD4", True] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`metabolite["pi", "c"] 
                  Toolbox`rateconst["GAPD5", True] + 
                 Toolbox`rateconst["GAPD6", True]) + 
               Toolbox`metabolite["pi", "c"] 
                Toolbox`rateconst["GAPD5", True] (
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["pi", "c"] 
          Toolbox`rateconst[
           "GAPD5", 
            True] ((Toolbox`rateconst["GAPD1", False] + 
             Toolbox`metabolite["nad", "c"] Toolbox`rateconst["GAPD1", True]) 
            Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD4", True] 
            Toolbox`rateconst["GAPD6", True] + 
           Toolbox`metabolite["g3p", "c"] 
            Toolbox`rateconst["GAPD3", True] (
             Toolbox`rateconst["GAPD2", True] 
              Toolbox`rateconst["GAPD4", True] 
              Toolbox`rateconst["GAPD6", True] + 
             Toolbox`metabolite["nad", "c"] 
              Toolbox`rateconst["GAPD1", True] (
               Toolbox`rateconst["GAPD4", True] 
                Toolbox`rateconst["GAPD6", True] + 
               Toolbox`rateconst["GAPD2", True] (
                 Toolbox`rateconst["GAPD4", True] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
           Toolbox`rateconst["GAPD2", True] Toolbox`rateconst["GAPD3", True] 
           Toolbox`rateconst["GAPD4", True] Toolbox`rateconst["GAPD5", True] 
           Toolbox`rateconst["GAPD6", True] + 
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD2", True] (
            Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["nad", "c"] 
           Toolbox`rateconst["GAPD1", True] (
            Toolbox`metabolite["g3p", "c"] Toolbox`metabolite["pi", "c"] 
             Toolbox`rateconst["GAPD3", True] 
             Toolbox`rateconst["GAPD4", True] 
             Toolbox`rateconst["GAPD5", True] 
             Toolbox`rateconst["GAPD6", True] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`metabolite["pi", "c"] Toolbox`rateconst["GAPD4", True] 
               Toolbox`rateconst["GAPD5", True] 
               Toolbox`rateconst["GAPD6", True] + 
              Toolbox`rateconst["GAPD3", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", True])) + 
              Toolbox`metabolite["g3p", "c"] 
               Toolbox`rateconst["GAPD3", True] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD4", True] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`metabolite["pi", "c"] 
                   Toolbox`rateconst["GAPD5", True] + 
                  Toolbox`rateconst["GAPD6", True]) + 
                Toolbox`metabolite["pi", "c"] 
                 Toolbox`rateconst["GAPD5", True] (
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["13dpg", "c"] 
          Toolbox`rateconst["GAPD2", False] (
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] (
             Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD4", True] (
               Toolbox`rateconst["GAPD5", False] + 
               Toolbox`rateconst["GAPD6", True])) + 
           Toolbox`metabolite["nadh", "c"] 
            Toolbox`rateconst["GAPD4", False] (
             Toolbox`rateconst["GAPD3", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD1", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`metabolite["nadh", "c"] 
          Toolbox`rateconst["GAPD4", False] (
           Toolbox`rateconst["GAPD1", False] 
            Toolbox`rateconst["GAPD3", False] 
            Toolbox`rateconst["GAPD5", False] 
            Toolbox`rateconst["GAPD6", False] + 
           Toolbox`metabolite["13dpg", "c"] 
            Toolbox`rateconst["GAPD2", False] (
             Toolbox`rateconst["GAPD3", False] 
              Toolbox`rateconst["GAPD5", False] 
              Toolbox`rateconst["GAPD6", False] + 
             Toolbox`rateconst["GAPD1", False] (
               Toolbox`rateconst["GAPD5", False] 
                Toolbox`rateconst["GAPD6", False] + 
               Toolbox`rateconst["GAPD3", False] (
                 Toolbox`rateconst["GAPD5", False] + 
                 Toolbox`rateconst["GAPD6", False] + 
                 Toolbox`rateconst["GAPD6", True]))))/(
          Toolbox`rateconst["GAPD1", False] 
           Toolbox`rateconst["GAPD3", False] (
            Toolbox`metabolite["nadh", "c"] Toolbox`rateconst["GAPD4", False] 
             Toolbox`rateconst["GAPD5", False] 
             Toolbox`rateconst["GAPD6", False] + 
            Toolbox`rateconst["GAPD2", True] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True]))) + 
          Toolbox`metabolite["13dpg", "c"] 
           Toolbox`rateconst["GAPD2", False] (
            Toolbox`rateconst["GAPD1", False] 
             Toolbox`rateconst["GAPD3", False] (
              Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD4", True] (
                Toolbox`rateconst["GAPD5", False] + 
                Toolbox`rateconst["GAPD6", True])) + 
            Toolbox`metabolite["nadh", "c"] 
             Toolbox`rateconst["GAPD4", False] (
              Toolbox`rateconst["GAPD3", False] 
               Toolbox`rateconst["GAPD5", False] 
               Toolbox`rateconst["GAPD6", False] + 
              Toolbox`rateconst["GAPD1", False] (
                Toolbox`rateconst["GAPD5", False] 
                 Toolbox`rateconst["GAPD6", False] + 
                Toolbox`rateconst["GAPD3", False] (
                  Toolbox`rateconst["GAPD5", False] + 
                  Toolbox`rateconst["GAPD6", False] + 
                  Toolbox`rateconst["GAPD6", True]))))), 
          Toolbox`rateconst["GAPD1", False]^(-1) 
          Toolbox`rateconst["GAPD1", True] 
          Toolbox`rateconst["GAPD2", False]^(-1) 
          Toolbox`rateconst["GAPD2", True] 
          Toolbox`rateconst["GAPD3", False]^(-1) 
          Toolbox`rateconst["GAPD3", True] 
          Toolbox`rateconst["GAPD4", False]^(-1) 
          Toolbox`rateconst["GAPD4", True] 
          Toolbox`rateconst["GAPD5", False]^(-1) 
          Toolbox`rateconst["GAPD5", True] 
          Toolbox`rateconst["GAPD6", False]^(-1) 
          Toolbox`rateconst["GAPD6", True]}, {
         "(d[2]*d[3]*d[5]*d[6]*x[1]*x[11]*x[3]*x[5]*x[7]*x[9])/(d[2]*d[5]*x[\
11]*x[3]*x[5]*x[7]*x[9] + x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) \
+ d[5]*x[11]*x[7]*x[9]) + d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + \
x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + \
d[2]*x[5]*(x[10]*x[8] + d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))", 
          "(d[1]*d[4]*d[6]*x[0]*x[10]*x[2]*x[4]*x[6]*x[8])/(x[0]*x[4]*(d[4]*x[\
10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + x[8]))) + \
d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(d[2]*x[5]*(d[5]*x[11]*x[3]*x[7]*x[9] + \
d[3]*x[1]*(d[5]*x[11]*x[7]*x[9] + x[3]*(x[10]*x[8] + d[5]*(x[10] + \
x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + \
x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + \
d[2]*x[5]*(x[10]*x[8] + d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + \
d[5]*x[9])))))/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[5]*((x[0] + d[3]*x[1])*x[11]*x[3]*x[7] + \
d[2]*x[5]*(x[11]*x[3]*x[7] + d[3]*x[1]*(x[11]*x[7] + x[3]*(x[10] + x[11] + \
x[7]))))*x[9])/(d[2]*d[5]*x[11]*x[3]*x[5]*x[7]*x[9] + \
x[0]*x[3]*(x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9]) + \
d[3]*x[1]*(d[2]*d[5]*x[11]*x[5]*x[7]*x[9] + x[3]*(x[4]*(x[10]*x[8] + \
x[7]*(x[11] + x[8])) + d[5]*x[11]*x[7]*x[9] + d[2]*x[5]*(x[10]*x[8] + \
d[5]*(x[10] + x[11])*x[9] + x[7]*(x[11] + x[8] + d[5]*x[9])))))", 
          "(d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))/(x[0]*x[4]*(d[4]*x[10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + \
x[8]))) + d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(d[4]*x[6]*(x[0]*x[10]*x[4]*x[8] + d[1]*x[2]*(x[10]*x[4]*x[8] + \
x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))/(x[0]*x[4]*(d[4]*x[10]*x[6]*x[8] + x[3]*(x[10]*x[8] + x[7]*(x[11] + \
x[8]))) + d[1]*x[2]*(x[0]*x[4]*(x[10]*x[8] + x[7]*(x[11] + x[8])) + \
d[4]*x[6]*(x[10]*x[4]*x[8] + x[0]*(x[10]*x[8] + x[4]*(x[10] + x[11] + \
x[8])))))", 
          "(x[1]*x[11]*x[3]*x[5]*x[7]*x[9])/(x[0]*x[10]*x[2]*x[4]*x[6]*x[8])"}\
}], "ExpectedMessages" -> {}, "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      Quantity[0.000115`2.2112128381856038, "Seconds"], "CPUTimeUsed" -> 
      Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {3., 9.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateInhibDataTALA2\"\>",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateInhibDataTALA2\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["result",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.8403361344537815`", ",", "0.01`", ",", 
                    RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",",
                     "0.06249999999999998`"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "130", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8403361344537815`", ",", "0", ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\<\"tes\"\>", "\[Ellipsis]", "\<\"txt\"\>"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], 
                    "}"}]}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.8403361344537815`", ",", "0.01`", ",", 
                    RowBox[{"\[LeftSkeleton]", "8", "\[RightSkeleton]"}], ",",
                     "0.06249999999999998`"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "130", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0.8403361344537815`", ",", "0", ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\<\"tes\"\>", "\[Ellipsis]", "\<\"txt\"\>"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], 
                    "}"}]}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0.000166`2.370623085872047","\"s\"","seconds",
                    "\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 9, "TestID" -> "simulateInhibDataTALA2", "Outcome" -> 
      "Success", "Input" -> HoldForm[$CellContext`result], "ExpectedOutput" -> 
      HoldForm[{{
         0.8403361344537815, 0.01, 0.00011999999999999995`, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.06249999999999998}, {
         0.8403361344537815, 0.01, 0.00019018718309533363`, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.09556246000918162}, {
         0.8403361344537815, 0.01, 0.0003014263717811494, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.14343894024974246`}, {
         0.8403361344537815, 0.01, 0.0004777286046641966, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.20973903725225757`}, {
         0.8403361344537815, 0.01, 0.0007571488133762321, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.2960910250571456}, {
         0.8403361344537815, 0.01, 0.0011999999999999995`, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.39999999999999986`}, {
         0.8403361344537815, 0.01, 0.0019018718309533362`, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.5137595027063783}, {
         0.8403361344537815, 0.01, 0.0030142637178114944`, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.6261110513450937}, {
         0.8403361344537815, 0.01, 0.004777286046641966, 0, 0, 0.0095, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.7263308928279026}, {
         0.8403361344537815, 0.01, 0.007571488133762321, 0, 0, 0.0095, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.8079280500270597}, {
         0.8403361344537815, 0.01, 0.011999999999999995`, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.8695652173913043}, {
         0.8403361344537815, 0.01, 0.00011999999999999995`, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.047619047619047596`}, {
         0.8403361344537815, 0.01, 0.00019018718309533363`, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.07342603821707415}, {
         0.8403361344537815, 0.01, 0.0003014263717811494, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.11158045058337383`}, {
         0.8403361344537815, 0.01, 0.0004777286046641966, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.16600891546544674`}, {
         0.8403361344537815, 0.01, 0.0007571488133762321, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.2398204386718606}, {
         0.8403361344537815, 0.01, 0.0011999999999999995`, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.3333333333333332}, {
         0.8403361344537815, 0.01, 0.0019018718309533362`, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.44210332285326664`}, {
         0.8403361344537815, 0.01, 0.0030142637178114944`, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.5567264313142642}, {
         0.8403361344537815, 0.01, 0.004777286046641966, 0, 0, 0.019, 1, 8.5, 
          30., "test_files/simulate_data/absRateFor.txt", 
          0.6656117668428602}, {
         0.8403361344537815, 0.01, 0.007571488133762321, 0, 0, 0.019, 1, 8.5, 
          30., "test_files/simulate_data/absRateFor.txt", 
          0.7593137586080182}, {
         0.8403361344537815, 0.01, 0.011999999999999995`, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.8333333333333331}, {
         0.8403361344537815, 0.01, 0.00011999999999999995`, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.03225806451612902}, {
         0.8403361344537815, 0.01, 0.00019018718309533363`, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.05017883653440392}, {
         0.8403361344537815, 0.01, 0.0003014263717811494, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.07726055628304394}, {
         0.8403361344537815, 0.01, 0.0004777286046641966, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.1171555664881081}, {
         0.8403361344537815, 0.01, 0.0007571488133762321, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.17377162126109222`}, {
         0.8403361344537815, 0.01, 0.0011999999999999995`, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.2499999999999999}, {
         0.8403361344537815, 0.01, 0.0019018718309533362`, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.3456772330197648}, {
         0.8403361344537815, 0.01, 0.0030142637178114944`, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.455721732064358}, {
         0.8403361344537815, 0.01, 0.004777286046641966, 0, 0, 0.038, 1, 8.5, 
          30., "test_files/simulate_data/absRateFor.txt", 
          0.5702665541135414}, {
         0.8403361344537815, 0.01, 0.007571488133762321, 0, 0, 0.038, 1, 8.5, 
          30., "test_files/simulate_data/absRateFor.txt", 
          0.6777510787376546}, {
         0.8403361344537815, 0.01, 0.011999999999999995`, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.769230769230769}, {
         0.8403361344537815, 9.000000000000007*^-6, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.06250000000000004}, {
         0.8403361344537815, 0.000014264038732150038`, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.09556246000918171}, {
         0.8403361344537815, 0.000022606977883586257`, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.14343894024974277`}, {
         0.8403361344537815, 0.00003582964534981475, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.2097390372522576}, {
         0.8403361344537815, 0.00005678616100321741, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.2960910250571456}, {
         0.8403361344537815, 0.00009000000000000007, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.40000000000000013`}, {
         0.8403361344537815, 0.00014264038732150037`, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.5137595027063786}, {
         0.8403361344537815, 0.00022606977883586258`, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.6261110513450943}, {
         0.8403361344537815, 0.00035829645349814786`, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.726330892827903}, {
         0.8403361344537815, 0.0005678616100321741, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.8079280500270597}, {
         0.8403361344537815, 0.0009000000000000007, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.8695652173913043}, {
         0.8403361344537815, 9.000000000000007*^-6, 0.01, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.04761904761904766}, {
         0.8403361344537815, 0.000014264038732150038`, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.07342603821707423}, {
         0.8403361344537815, 0.000022606977883586257`, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.11158045058337406`}, {
         0.8403361344537815, 0.00003582964534981475, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.16600891546544674`}, {
         0.8403361344537815, 0.00005678616100321741, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.2398204386718606}, {
         0.8403361344537815, 0.00009000000000000007, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.33333333333333354`}, {
         0.8403361344537815, 0.00014264038732150037`, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.4421033228532669}, {
         0.8403361344537815, 0.00022606977883586258`, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.5567264313142649}, {
         0.8403361344537815, 0.00035829645349814786`, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.6656117668428604}, {
         0.8403361344537815, 0.0005678616100321741, 0.01, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.7593137586080181}, {
         0.8403361344537815, 0.0009000000000000007, 0.01, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.8333333333333336}, {
         0.8403361344537815, 9.000000000000007*^-6, 0.01, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.03225806451612906}, {
         0.8403361344537815, 0.000014264038732150038`, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.050178836534403984`}, {
         0.8403361344537815, 0.000022606977883586257`, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.0772605562830441}, {
         0.8403361344537815, 0.00003582964534981475, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.11715556648810813`}, {
         0.8403361344537815, 0.00005678616100321741, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.17377162126109227`}, {
         0.8403361344537815, 0.00009000000000000007, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.25000000000000017`}, {
         0.8403361344537815, 0.00014264038732150037`, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.345677233019765}, {
         0.8403361344537815, 0.00022606977883586258`, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.45572173206435856`}, {
         0.8403361344537815, 0.00035829645349814786`, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.5702665541135417}, {
         0.8403361344537815, 0.0005678616100321741, 0.01, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.6777510787376545}, {
         0.8403361344537815, 0.0009000000000000007, 0.01, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.7692307692307694}, {
         0.8403361344537815, 0, 0, 0.01, 0.0000285, 0.0095, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.06250000000000001}, {
         0.8403361344537815, 0, 0, 0.01, 0.000045169455985141756`, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.09556246000918166}, {
         0.8403361344537815, 0, 0, 0.01, 0.00007158876329802309, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.14343894024974266`}, {
         0.8403361344537815, 0, 0, 0.01, 0.00011346054360774674`, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.20973903725225762`}, {
         0.8403361344537815, 0, 0, 0.01, 0.000179822843176855, 0.0095, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.29609102505714546`}, {
         0.8403361344537815, 0, 0, 0.01, 0.000285, 0.0095, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.39999999999999997`}, {
         0.8403361344537815, 0, 0, 0.01, 0.00045169455985141755`, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.5137595027063785}, {
         0.8403361344537815, 0, 0, 0.01, 0.000715887632980231, 0.0095, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.626111051345094}, {
         0.8403361344537815, 0, 0, 0.01, 0.0011346054360774674`, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.7263308928279029}, {
         0.8403361344537815, 0, 0, 0.01, 0.00179822843176855, 0.0095, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.8079280500270596}, {
         0.8403361344537815, 0, 0, 0.01, 0.00285, 0.0095, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.8695652173913043}, {
         0.8403361344537815, 0, 0, 0.01, 0.0000285, 0.019, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.04761904761904762}, {
         0.8403361344537815, 0, 0, 0.01, 0.000045169455985141756`, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.07342603821707419}, {
         0.8403361344537815, 0, 0, 0.01, 0.00007158876329802309, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.11158045058337397`}, {
         0.8403361344537815, 0, 0, 0.01, 0.00011346054360774674`, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.1660089154654468}, {
         0.8403361344537815, 0, 0, 0.01, 0.000179822843176855, 0.019, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.23982043867186045`}, {
         0.8403361344537815, 0, 0, 0.01, 0.000285, 0.019, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.3333333333333333}, {
         0.8403361344537815, 0, 0, 0.01, 0.00045169455985141755`, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.4421033228532668}, {
         0.8403361344537815, 0, 0, 0.01, 0.000715887632980231, 0.019, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.5567264313142647}, {
         0.8403361344537815, 0, 0, 0.01, 0.0011346054360774674`, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.6656117668428603}, {
         0.8403361344537815, 0, 0, 0.01, 0.00179822843176855, 0.019, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.7593137586080182}, {
         0.8403361344537815, 0, 0, 0.01, 0.00285, 0.019, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.8333333333333333}, {
         0.8403361344537815, 0, 0, 0.01, 0.0000285, 0.038, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.03225806451612904}, {
         0.8403361344537815, 0, 0, 0.01, 0.000045169455985141756`, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.05017883653440395}, {
         0.8403361344537815, 0, 0, 0.01, 0.00007158876329802309, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.07726055628304405}, {
         0.8403361344537815, 0, 0, 0.01, 0.00011346054360774674`, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.11715556648810815`}, {
         0.8403361344537815, 0, 0, 0.01, 0.000179822843176855, 0.038, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.17377162126109214`}, {
         0.8403361344537815, 0, 0, 0.01, 0.000285, 0.038, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.25}, {
         0.8403361344537815, 0, 0, 0.01, 0.00045169455985141755`, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.34567723301976483`}, {
         0.8403361344537815, 0, 0, 0.01, 0.000715887632980231, 0.038, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.45572173206435834`}, {
         0.8403361344537815, 0, 0, 0.01, 0.0011346054360774674`, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.5702665541135415}, {
         0.8403361344537815, 0, 0, 0.01, 0.00179822843176855, 0.038, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.6777510787376545}, {
         0.8403361344537815, 0, 0, 0.01, 0.00285, 0.038, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.7692307692307693}, {
         0.8403361344537815, 0, 0, 3.7999999999999996`*^-6, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 0.0625}, {
         0.8403361344537815, 0, 0, 6.022594131352233*^-6, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.09556246000918166}, {
         0.8403361344537815, 0, 0, 9.545168439736411*^-6, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.14343894024974269`}, {
         0.8403361344537815, 0, 0, 0.000015128072481032882`, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.2097390372522575}, {
         0.8403361344537815, 0, 0, 0.00002397637909024733, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.2960910250571455}, {
         0.8403361344537815, 0, 0, 0.000037999999999999995`, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.4000000000000001}, {
         0.8403361344537815, 0, 0, 0.000060225941313522335`, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.5137595027063785}, {
         0.8403361344537815, 0, 0, 0.00009545168439736412, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.6261110513450941}, {
         0.8403361344537815, 0, 0, 0.00015128072481032897`, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.7263308928279028}, {
         0.8403361344537815, 0, 0, 0.0002397637909024733, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.8079280500270596}, {
         0.8403361344537815, 0, 0, 0.00037999999999999997`, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.8695652173913044}, {
         0.8403361344537815, 0, 0, 3.7999999999999996`*^-6, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.04761904761904762}, {
         0.8403361344537815, 0, 0, 6.022594131352233*^-6, 0.01, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.07342603821707419}, {
         0.8403361344537815, 0, 0, 9.545168439736411*^-6, 0.01, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.11158045058337399`}, {
         0.8403361344537815, 0, 0, 0.000015128072481032882`, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.16600891546544666`}, {
         0.8403361344537815, 0, 0, 0.00002397637909024733, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.23982043867186045`}, {
         0.8403361344537815, 0, 0, 0.000037999999999999995`, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.3333333333333333}, {
         0.8403361344537815, 0, 0, 0.000060225941313522335`, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.4421033228532668}, {
         0.8403361344537815, 0, 0, 0.00009545168439736412, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.5567264313142646}, {
         0.8403361344537815, 0, 0, 0.00015128072481032897`, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.6656117668428604}, {
         0.8403361344537815, 0, 0, 0.0002397637909024733, 0.01, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.7593137586080181}, {
         0.8403361344537815, 0, 0, 0.00037999999999999997`, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.8333333333333334}, {
         0.8403361344537815, 0, 0, 3.7999999999999996`*^-6, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.03225806451612903}, {
         0.8403361344537815, 0, 0, 6.022594131352233*^-6, 0.01, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.05017883653440395}, {
         0.8403361344537815, 0, 0, 9.545168439736411*^-6, 0.01, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.07726055628304405}, {
         0.8403361344537815, 0, 0, 0.000015128072481032882`, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.11715556648810806`}, {
         0.8403361344537815, 0, 0, 0.00002397637909024733, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.17377162126109216`}, {
         0.8403361344537815, 0, 0, 0.000037999999999999995`, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 0.25}, {
         0.8403361344537815, 0, 0, 0.000060225941313522335`, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.3456772330197649}, {
         0.8403361344537815, 0, 0, 0.00009545168439736412, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.45572173206435845`}, {
         0.8403361344537815, 0, 0, 0.00015128072481032897`, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.5702665541135415}, {
         0.8403361344537815, 0, 0, 0.0002397637909024733, 0.01, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.6777510787376545}, {
         0.8403361344537815, 0, 0, 0.00037999999999999997`, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.7692307692307692}}], "ActualOutput" -> 
      HoldForm[{{
         0.8403361344537815, 0.01, 0.00011999999999999995`, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.06249999999999998}, {
         0.8403361344537815, 0.01, 0.00019018718309533363`, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.09556246000918162}, {
         0.8403361344537815, 0.01, 0.0003014263717811494, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.14343894024974246`}, {
         0.8403361344537815, 0.01, 0.0004777286046641966, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.20973903725225757`}, {
         0.8403361344537815, 0.01, 0.0007571488133762321, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.2960910250571456}, {
         0.8403361344537815, 0.01, 0.0011999999999999995`, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.39999999999999986`}, {
         0.8403361344537815, 0.01, 0.0019018718309533362`, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.5137595027063783}, {
         0.8403361344537815, 0.01, 0.0030142637178114944`, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.6261110513450937}, {
         0.8403361344537815, 0.01, 0.004777286046641966, 0, 0, 0.0095, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.7263308928279026}, {
         0.8403361344537815, 0.01, 0.007571488133762321, 0, 0, 0.0095, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.8079280500270597}, {
         0.8403361344537815, 0.01, 0.011999999999999995`, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.8695652173913043}, {
         0.8403361344537815, 0.01, 0.00011999999999999995`, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.047619047619047596`}, {
         0.8403361344537815, 0.01, 0.00019018718309533363`, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.07342603821707415}, {
         0.8403361344537815, 0.01, 0.0003014263717811494, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.11158045058337383`}, {
         0.8403361344537815, 0.01, 0.0004777286046641966, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.16600891546544674`}, {
         0.8403361344537815, 0.01, 0.0007571488133762321, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.2398204386718606}, {
         0.8403361344537815, 0.01, 0.0011999999999999995`, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.3333333333333332}, {
         0.8403361344537815, 0.01, 0.0019018718309533362`, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.44210332285326664`}, {
         0.8403361344537815, 0.01, 0.0030142637178114944`, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.5567264313142642}, {
         0.8403361344537815, 0.01, 0.004777286046641966, 0, 0, 0.019, 1, 8.5, 
          30., "test_files/simulate_data/absRateFor.txt", 
          0.6656117668428602}, {
         0.8403361344537815, 0.01, 0.007571488133762321, 0, 0, 0.019, 1, 8.5, 
          30., "test_files/simulate_data/absRateFor.txt", 
          0.7593137586080182}, {
         0.8403361344537815, 0.01, 0.011999999999999995`, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.8333333333333331}, {
         0.8403361344537815, 0.01, 0.00011999999999999995`, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.03225806451612902}, {
         0.8403361344537815, 0.01, 0.00019018718309533363`, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.05017883653440392}, {
         0.8403361344537815, 0.01, 0.0003014263717811494, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.07726055628304394}, {
         0.8403361344537815, 0.01, 0.0004777286046641966, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.1171555664881081}, {
         0.8403361344537815, 0.01, 0.0007571488133762321, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.17377162126109222`}, {
         0.8403361344537815, 0.01, 0.0011999999999999995`, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.2499999999999999}, {
         0.8403361344537815, 0.01, 0.0019018718309533362`, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.3456772330197648}, {
         0.8403361344537815, 0.01, 0.0030142637178114944`, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.455721732064358}, {
         0.8403361344537815, 0.01, 0.004777286046641966, 0, 0, 0.038, 1, 8.5, 
          30., "test_files/simulate_data/absRateFor.txt", 
          0.5702665541135414}, {
         0.8403361344537815, 0.01, 0.007571488133762321, 0, 0, 0.038, 1, 8.5, 
          30., "test_files/simulate_data/absRateFor.txt", 
          0.6777510787376546}, {
         0.8403361344537815, 0.01, 0.011999999999999995`, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.769230769230769}, {
         0.8403361344537815, 9.000000000000007*^-6, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.06250000000000004}, {
         0.8403361344537815, 0.000014264038732150038`, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.09556246000918171}, {
         0.8403361344537815, 0.000022606977883586257`, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.14343894024974277`}, {
         0.8403361344537815, 0.00003582964534981475, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.2097390372522576}, {
         0.8403361344537815, 0.00005678616100321741, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.2960910250571456}, {
         0.8403361344537815, 0.00009000000000000007, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.40000000000000013`}, {
         0.8403361344537815, 0.00014264038732150037`, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.5137595027063786}, {
         0.8403361344537815, 0.00022606977883586258`, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.6261110513450943}, {
         0.8403361344537815, 0.00035829645349814786`, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.726330892827903}, {
         0.8403361344537815, 0.0005678616100321741, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.8079280500270597}, {
         0.8403361344537815, 0.0009000000000000007, 0.01, 0, 0, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.8695652173913043}, {
         0.8403361344537815, 9.000000000000007*^-6, 0.01, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.04761904761904766}, {
         0.8403361344537815, 0.000014264038732150038`, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.07342603821707423}, {
         0.8403361344537815, 0.000022606977883586257`, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.11158045058337406`}, {
         0.8403361344537815, 0.00003582964534981475, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.16600891546544674`}, {
         0.8403361344537815, 0.00005678616100321741, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.2398204386718606}, {
         0.8403361344537815, 0.00009000000000000007, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.33333333333333354`}, {
         0.8403361344537815, 0.00014264038732150037`, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.4421033228532669}, {
         0.8403361344537815, 0.00022606977883586258`, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.5567264313142649}, {
         0.8403361344537815, 0.00035829645349814786`, 0.01, 0, 0, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.6656117668428604}, {
         0.8403361344537815, 0.0005678616100321741, 0.01, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.7593137586080181}, {
         0.8403361344537815, 0.0009000000000000007, 0.01, 0, 0, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.8333333333333336}, {
         0.8403361344537815, 9.000000000000007*^-6, 0.01, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.03225806451612906}, {
         0.8403361344537815, 0.000014264038732150038`, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.050178836534403984`}, {
         0.8403361344537815, 0.000022606977883586257`, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.0772605562830441}, {
         0.8403361344537815, 0.00003582964534981475, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.11715556648810813`}, {
         0.8403361344537815, 0.00005678616100321741, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.17377162126109227`}, {
         0.8403361344537815, 0.00009000000000000007, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.25000000000000017`}, {
         0.8403361344537815, 0.00014264038732150037`, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.345677233019765}, {
         0.8403361344537815, 0.00022606977883586258`, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.45572173206435856`}, {
         0.8403361344537815, 0.00035829645349814786`, 0.01, 0, 0, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateFor.txt", 
          0.5702665541135417}, {
         0.8403361344537815, 0.0005678616100321741, 0.01, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.6777510787376545}, {
         0.8403361344537815, 0.0009000000000000007, 0.01, 0, 0, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateFor.txt", 
          0.7692307692307694}, {
         0.8403361344537815, 0, 0, 0.01, 0.0000285, 0.0095, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.06250000000000001}, {
         0.8403361344537815, 0, 0, 0.01, 0.000045169455985141756`, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.09556246000918166}, {
         0.8403361344537815, 0, 0, 0.01, 0.00007158876329802309, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.14343894024974266`}, {
         0.8403361344537815, 0, 0, 0.01, 0.00011346054360774674`, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.20973903725225762`}, {
         0.8403361344537815, 0, 0, 0.01, 0.000179822843176855, 0.0095, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.29609102505714546`}, {
         0.8403361344537815, 0, 0, 0.01, 0.000285, 0.0095, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.39999999999999997`}, {
         0.8403361344537815, 0, 0, 0.01, 0.00045169455985141755`, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.5137595027063785}, {
         0.8403361344537815, 0, 0, 0.01, 0.000715887632980231, 0.0095, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.626111051345094}, {
         0.8403361344537815, 0, 0, 0.01, 0.0011346054360774674`, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.7263308928279029}, {
         0.8403361344537815, 0, 0, 0.01, 0.00179822843176855, 0.0095, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.8079280500270596}, {
         0.8403361344537815, 0, 0, 0.01, 0.00285, 0.0095, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.8695652173913043}, {
         0.8403361344537815, 0, 0, 0.01, 0.0000285, 0.019, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.04761904761904762}, {
         0.8403361344537815, 0, 0, 0.01, 0.000045169455985141756`, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.07342603821707419}, {
         0.8403361344537815, 0, 0, 0.01, 0.00007158876329802309, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.11158045058337397`}, {
         0.8403361344537815, 0, 0, 0.01, 0.00011346054360774674`, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.1660089154654468}, {
         0.8403361344537815, 0, 0, 0.01, 0.000179822843176855, 0.019, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.23982043867186045`}, {
         0.8403361344537815, 0, 0, 0.01, 0.000285, 0.019, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.3333333333333333}, {
         0.8403361344537815, 0, 0, 0.01, 0.00045169455985141755`, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.4421033228532668}, {
         0.8403361344537815, 0, 0, 0.01, 0.000715887632980231, 0.019, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.5567264313142647}, {
         0.8403361344537815, 0, 0, 0.01, 0.0011346054360774674`, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.6656117668428603}, {
         0.8403361344537815, 0, 0, 0.01, 0.00179822843176855, 0.019, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.7593137586080182}, {
         0.8403361344537815, 0, 0, 0.01, 0.00285, 0.019, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.8333333333333333}, {
         0.8403361344537815, 0, 0, 0.01, 0.0000285, 0.038, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.03225806451612904}, {
         0.8403361344537815, 0, 0, 0.01, 0.000045169455985141756`, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.05017883653440395}, {
         0.8403361344537815, 0, 0, 0.01, 0.00007158876329802309, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.07726055628304405}, {
         0.8403361344537815, 0, 0, 0.01, 0.00011346054360774674`, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.11715556648810815`}, {
         0.8403361344537815, 0, 0, 0.01, 0.000179822843176855, 0.038, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.17377162126109214`}, {
         0.8403361344537815, 0, 0, 0.01, 0.000285, 0.038, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.25}, {
         0.8403361344537815, 0, 0, 0.01, 0.00045169455985141755`, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.34567723301976483`}, {
         0.8403361344537815, 0, 0, 0.01, 0.000715887632980231, 0.038, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.45572173206435834`}, {
         0.8403361344537815, 0, 0, 0.01, 0.0011346054360774674`, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.5702665541135415}, {
         0.8403361344537815, 0, 0, 0.01, 0.00179822843176855, 0.038, 1, 8.5, 
          30., "test_files/simulate_data/absRateRev.txt", 
          0.6777510787376545}, {
         0.8403361344537815, 0, 0, 0.01, 0.00285, 0.038, 1, 8.5, 30., 
          "test_files/simulate_data/absRateRev.txt", 0.7692307692307693}, {
         0.8403361344537815, 0, 0, 3.7999999999999996`*^-6, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 0.0625}, {
         0.8403361344537815, 0, 0, 6.022594131352233*^-6, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.09556246000918166}, {
         0.8403361344537815, 0, 0, 9.545168439736411*^-6, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.14343894024974269`}, {
         0.8403361344537815, 0, 0, 0.000015128072481032882`, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.2097390372522575}, {
         0.8403361344537815, 0, 0, 0.00002397637909024733, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.2960910250571455}, {
         0.8403361344537815, 0, 0, 0.000037999999999999995`, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.4000000000000001}, {
         0.8403361344537815, 0, 0, 0.000060225941313522335`, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.5137595027063785}, {
         0.8403361344537815, 0, 0, 0.00009545168439736412, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.6261110513450941}, {
         0.8403361344537815, 0, 0, 0.00015128072481032897`, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.7263308928279028}, {
         0.8403361344537815, 0, 0, 0.0002397637909024733, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.8079280500270596}, {
         0.8403361344537815, 0, 0, 0.00037999999999999997`, 0.01, 0.0095, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.8695652173913044}, {
         0.8403361344537815, 0, 0, 3.7999999999999996`*^-6, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.04761904761904762}, {
         0.8403361344537815, 0, 0, 6.022594131352233*^-6, 0.01, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.07342603821707419}, {
         0.8403361344537815, 0, 0, 9.545168439736411*^-6, 0.01, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.11158045058337399`}, {
         0.8403361344537815, 0, 0, 0.000015128072481032882`, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.16600891546544666`}, {
         0.8403361344537815, 0, 0, 0.00002397637909024733, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.23982043867186045`}, {
         0.8403361344537815, 0, 0, 0.000037999999999999995`, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.3333333333333333}, {
         0.8403361344537815, 0, 0, 0.000060225941313522335`, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.4421033228532668}, {
         0.8403361344537815, 0, 0, 0.00009545168439736412, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.5567264313142646}, {
         0.8403361344537815, 0, 0, 0.00015128072481032897`, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.6656117668428604}, {
         0.8403361344537815, 0, 0, 0.0002397637909024733, 0.01, 0.019, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.7593137586080181}, {
         0.8403361344537815, 0, 0, 0.00037999999999999997`, 0.01, 0.019, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.8333333333333334}, {
         0.8403361344537815, 0, 0, 3.7999999999999996`*^-6, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.03225806451612903}, {
         0.8403361344537815, 0, 0, 6.022594131352233*^-6, 0.01, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.05017883653440395}, {
         0.8403361344537815, 0, 0, 9.545168439736411*^-6, 0.01, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.07726055628304405}, {
         0.8403361344537815, 0, 0, 0.000015128072481032882`, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.11715556648810806`}, {
         0.8403361344537815, 0, 0, 0.00002397637909024733, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.17377162126109216`}, {
         0.8403361344537815, 0, 0, 0.000037999999999999995`, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 0.25}, {
         0.8403361344537815, 0, 0, 0.000060225941313522335`, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.3456772330197649}, {
         0.8403361344537815, 0, 0, 0.00009545168439736412, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.45572173206435845`}, {
         0.8403361344537815, 0, 0, 0.00015128072481032897`, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.5702665541135415}, {
         0.8403361344537815, 0, 0, 0.0002397637909024733, 0.01, 0.038, 1, 8.5,
           30., "test_files/simulate_data/absRateRev.txt", 
          0.6777510787376545}, {
         0.8403361344537815, 0, 0, 0.00037999999999999997`, 0.01, 0.038, 1, 
          8.5, 30., "test_files/simulate_data/absRateRev.txt", 
          0.7692307692307692}}], "ExpectedMessages" -> {}, 
      "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      Quantity[0.000166`2.370623085872047, "Seconds"], "CPUTimeUsed" -> 
      Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["TestResultObject",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False}, 
      PanelBox[
       PaneSelectorBox[{False->GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquarePlusIconMedium"],
              ImageSizeCache->{12., {0., 12.}}],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = True),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"],
               ImageSizeCache->{16., {3., 9.}}],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateInhibDataG3PD2\"\>",
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], True->
        GridBox[{
          {
           PaneBox[
            ButtonBox[
             
             DynamicBox[FEPrivate`FrontEndResource[
              "FEBitmaps", "SquareMinusIconMedium"]],
             Appearance->None,
             ButtonFunction:>(Typeset`open$$ = False),
             Evaluator->Automatic,
             Method->"Preemptive"],
            Alignment->{Center, Center},
            
            ImageSize->
             Dynamic[{
              Automatic, 3.5 CurrentValue["FontCapHeight"]/
               AbsoluteCurrentValue[Magnification]}]], 
           GraphicsBox[InsetBox[
             PaneBox[
              
              DynamicBox[FEPrivate`FrontEndResource[
               "MUnitExpressions", "SuccessIcon"]],
              Alignment->Center,
              
              ImageSize->
               Dynamic[{
                Automatic, 3.5 CurrentValue["FontCapHeight"]/
                 AbsoluteCurrentValue[Magnification]}]]],
            AspectRatio->1,
            Axes->False,
            Background->GrayLevel[0.93],
            Frame->True,
            FrameStyle->Directive[
              Thickness[Tiny], 
              GrayLevel[0.55]],
            FrameTicks->None,
            ImageSize->{Automatic, 
              Dynamic[
              3.5 CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification]]},
            PlotRange->{{0, 1}, {0, 1}}], GridBox[{
             {
              RowBox[{
               TagBox["\<\"Outcome: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"Success\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Test ID: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox["\<\"simulateInhibDataG3PD2\"\>",
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Input: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox["result",
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Expected output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.000024`", ",", "0.000018000000000000017`", ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",",
                     "0.06250000000000006`"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "118", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0.000024`", ",", "0", ",", 
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\<\"tes\"\>", "\[Ellipsis]", "\<\".txt\"\>"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], 
                    "}"}]}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Actual output: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0.000024`", ",", "0.000018000000000000017`", ",", 
                    RowBox[{"\[LeftSkeleton]", "7", "\[RightSkeleton]"}], ",",
                     "0.06250000000000006`"}], "}"}], ",", 
                    RowBox[{"\[LeftSkeleton]", "118", "\[RightSkeleton]"}], 
                    ",", 
                    RowBox[{"{", 
                    RowBox[{"0.000024`", ",", "0", ",", 
                    RowBox[{"\[LeftSkeleton]", "6", "\[RightSkeleton]"}], ",", 
                    RowBox[{"\<\"tes\"\>", "\[Ellipsis]", "\<\".txt\"\>"}], 
                    ",", 
                    RowBox[{"\[LeftSkeleton]", "19", "\[RightSkeleton]"}]}], 
                    "}"}]}], "}"}],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]},
             {
              RowBox[{
               TagBox["\<\"Time Taken: \"\>",
                "SummaryItemAnnotation"], "\[InvisibleSpace]", 
               TagBox[
                PaneBox[
                 TagBox[
                  
                  TemplateBox[{
                   "0.000093`2.1189979463859268","\"s\"","seconds",
                    "\"Seconds\""},
                   "Quantity"],
                  Short[#, 
                   Rational[2, 3]]& ],
                 BaselinePosition->Baseline,
                 ContentPadding->False,
                 FrameMargins->0,
                 ImageSize->{{1, 500}, Automatic},
                 StripOnInput->True],
                "SummaryItem"]}]}
            },
            AutoDelete->False,
            
            BaseStyle->{
             ShowStringCharacters -> False, NumberMarks -> False, 
              PrintPrecision -> 3, ShowSyntaxStyles -> False},
            GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Automatic}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}
         },
         AutoDelete->False,
         BaselinePosition->{1, 1},
         GridBoxAlignment->{"Rows" -> {{Top}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]}, Dynamic[
        Typeset`open$$],
        ImageSize->Automatic],
       BaselinePosition->Baseline],
      DynamicModuleValues:>{}], "]"}],
    TestResultObject[
     Association[
     "TestIndex" -> 10, "TestID" -> "simulateInhibDataG3PD2", "Outcome" -> 
      "Success", "Input" -> HoldForm[$CellContext`result], "ExpectedOutput" -> 
      HoldForm[{{
         0.000024, 0.000018000000000000017`, 2.1*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.06250000000000006}, {
         0.000024, 0.000056920997883030876`, 2.1*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.17411239489546845`}, {
         0.000024, 0.00018000000000000017`, 2.1*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.4000000000000002}, {
         0.000024, 0.0005692099788303088, 2.1*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.6782688399674107}, {
         0.000024, 0.0018000000000000017`, 2.1*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.8695652173913044}, {
         0.000024, 0.000018000000000000017`, 4.2*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.047619047619047665`}, {
         0.000024, 0.000056920997883030876`, 4.2*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.13652705949581442`}, {
         0.000024, 0.00018000000000000017`, 4.2*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.33333333333333354`}, {
         0.000024, 0.0005692099788303088, 4.2*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.6125741132772071}, {
         0.000024, 0.0018000000000000017`, 4.2*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.8333333333333335}, {
         0.000024, 0.000018000000000000017`, 8.4*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.032258064516129066`}, {
         0.000024, 0.000056920997883030876`, 8.4*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.09535767393826004}, {
         0.000024, 0.00018000000000000017`, 8.4*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.2500000000000002}, {
         0.000024, 0.0005692099788303088, 8.4*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.5131670194948622}, {
         0.000024, 0.0018000000000000017`, 8.4*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.7692307692307694}, {
         0.000024, 0.0001, 2.2499999999999996`*^-6, 0, 3.400000000000002*^-7, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.04914933837429115}, {
         0.000024, 0.0001, 2.2499999999999996`*^-6, 0, 
          1.0751744044572496`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.13597151798297863`}, {
         0.000024, 0.0001, 2.2499999999999996`*^-6, 0, 
          3.4000000000000018`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.3080568720379148}, {
         0.000024, 0.0001, 2.2499999999999996`*^-6, 0, 
          0.000010751744044572496`, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.5136142175737066}, {
         0.000024, 0.0001, 2.2499999999999996`*^-6, 0, 0.00003400000000000002,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.6509764646970456}, {
         0.000024, 0.0001, 4.499999999999999*^-6, 0, 3.400000000000002*^-7, 1,
           7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.03367875647668396}, {
         0.000024, 0.0001, 4.499999999999999*^-6, 0, 1.0751744044572496`*^-6, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.09481652165128766}, {
         0.000024, 0.0001, 4.499999999999999*^-6, 0, 3.4000000000000018`*^-6, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.22260273972602748`}, {
         0.000024, 0.0001, 4.499999999999999*^-6, 0, 0.000010751744044572496`,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.3879359014999327}, {
         0.000024, 0.0001, 4.499999999999999*^-6, 0, 0.00003400000000000002, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.5070202808112325}, {
         0.000024, 0.0001, 8.999999999999999*^-6, 0, 3.400000000000002*^-7, 1,
           7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.020667726550079507`}, {
         0.000024, 0.0001, 8.999999999999999*^-6, 0, 1.0751744044572496`*^-6, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.05906293364296222}, {
         0.000024, 0.0001, 8.999999999999999*^-6, 0, 3.4000000000000018`*^-6, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.14317180616740097`}, {
         0.000024, 0.0001, 8.999999999999999*^-6, 0, 0.000010751744044572496`,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.26046664992560487`}, {
         0.000024, 0.0001, 8.999999999999999*^-6, 0, 0.00003400000000000002, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.351541373715522}, {
         0.000024, 0.000018000000000000017`, 0, 0.0006500000000000001, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.06060606060606066}, {
         0.000024, 0.000056920997883030876`, 0, 0.0006500000000000001, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.16016871556802817`}, {
         0.000024, 0.00018000000000000017`, 0, 0.0006500000000000001, 0.00001,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.3333333333333335}, {
         0.000024, 0.0005692099788303088, 0, 0.0006500000000000001, 0.00001, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.5064979510986386}, {
         0.000024, 0.0018000000000000017`, 0, 0.0006500000000000001, 0.00001, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.6060606060606061}, {
         0.000024, 0.000018000000000000017`, 0, 0.0013000000000000002`, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.04545454545454549}, {
         0.000024, 0.000056920997883030876`, 0, 0.0013000000000000002`, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.12012653667602116`}, {
         0.000024, 0.00018000000000000017`, 0, 0.0013000000000000002`, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.2500000000000001}, {
         0.000024, 0.0005692099788303088, 0, 0.0013000000000000002`, 0.00001, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.379873463323979}, {
         0.000024, 0.0018000000000000017`, 0, 0.0013000000000000002`, 0.00001,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.4545454545454546}, {
         0.000024, 0.000018000000000000017`, 0, 0.0026000000000000003`, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.03030303030303033}, {
         0.000024, 0.000056920997883030876`, 0, 0.0026000000000000003`, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.08008435778401408}, {
         0.000024, 0.00018000000000000017`, 0, 0.0026000000000000003`, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.16666666666666674`}, {
         0.000024, 0.0005692099788303088, 0, 0.0026000000000000003`, 0.00001, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.2532489755493193}, {
         0.000024, 0.0018000000000000017`, 0, 0.0026000000000000003`, 0.00001,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.30303030303030304`}, {
         0.000024, 0.002, 0, 0.0000935, 3.400000000000002*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.06250000000000004}, {
         0.000024, 0.002, 0, 0.0000935, 1.0751744044572496`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.17411239489546843`}, {
         0.000024, 0.002, 0, 0.0000935, 3.4000000000000018`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.40000000000000013`}, {
         0.000024, 0.002, 0, 0.0000935, 0.000010751744044572496`, 1, 7.4, 23.,
           "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.6782688399674105}, {
         0.000024, 0.002, 0, 0.0000935, 0.00003400000000000002, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.8695652173913044}, {
         0.000024, 0.002, 0, 0.000187, 3.400000000000002*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.047619047619047644`}, {
         0.000024, 0.002, 0, 0.000187, 1.0751744044572496`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.1365270594958144}, {
         0.000024, 0.002, 0, 0.000187, 3.4000000000000018`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.3333333333333335}, {
         0.000024, 0.002, 0, 0.000187, 0.000010751744044572496`, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.612574113277207}, {
         0.000024, 0.002, 0, 0.000187, 0.00003400000000000002, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.8333333333333335}, {
         0.000024, 0.002, 0, 0.000374, 3.400000000000002*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.03225806451612905}, {
         0.000024, 0.002, 0, 0.000374, 1.0751744044572496`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.09535767393826004}, {
         0.000024, 0.002, 0, 0.000374, 3.4000000000000018`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.25000000000000017`}, {
         0.000024, 0.002, 0, 0.000374, 0.000010751744044572496`, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.5131670194948622}, {
         0.000024, 0.002, 0, 0.000374, 0.00003400000000000002, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.7692307692307694}, {
         0.000024, 0.000018999999999999998`, 3.0000000000000013`*^-6, 0.002, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.06250000000000001}, {
         0.000024, 0.000018999999999999998`, 9.486832980505141*^-6, 0.002, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.17411239489546834`}, {
         0.000024, 0.000018999999999999998`, 0.00003000000000000001, 0.002, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.4000000000000001}, {
         0.000024, 0.000018999999999999998`, 0.00009486832980505142, 0.002, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.6782688399674105}, {
         0.000024, 0.000018999999999999998`, 0.00030000000000000014`, 0.002, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.8695652173913044}, {
         0.000024, 0.000037999999999999995`, 3.0000000000000013`*^-6, 0.002, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.04761904761904763}, {
         0.000024, 0.000037999999999999995`, 9.486832980505141*^-6, 0.002, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.13652705949581434`}, {
         0.000024, 0.000037999999999999995`, 0.00003000000000000001, 0.002, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.3333333333333334}, {
         0.000024, 0.000037999999999999995`, 0.00009486832980505142, 0.002, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.6125741132772069}, {
         0.000024, 0.000037999999999999995`, 0.00030000000000000014`, 0.002, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.8333333333333335}, {
         0.000024, 0.00007599999999999999, 3.0000000000000013`*^-6, 0.002, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.03225806451612904}, {
         0.000024, 0.00007599999999999999, 9.486832980505141*^-6, 0.002, 0, 1,
           7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.09535767393825999}, {
         0.000024, 0.00007599999999999999, 0.00003000000000000001, 0.002, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.25000000000000006`}, {
         0.000024, 0.00007599999999999999, 0.00009486832980505142, 0.002, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.5131670194948621}, {
         0.000024, 0.00007599999999999999, 0.00030000000000000014`, 0.002, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.7692307692307693}, {
         0.000024, 0.00009000000000000002, 0.0001, 0.000016500000000000015`, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.052980132450331174`}, {
         0.000024, 0.00009000000000000002, 0.0001, 0.000052177581392778313`, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.1447390418373348}, {
         0.000024, 0.00009000000000000002, 0.0001, 0.00016500000000000016`, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.3200000000000002}, {
         0.000024, 0.00009000000000000002, 0.0001, 0.0005217758139277831, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.518564992170751}, {
         0.000024, 0.00009000000000000002, 0.0001, 0.0016500000000000017`, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.6451612903225806}, {
         0.000024, 0.00018000000000000004`, 0.0001, 0.000016500000000000015`, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.03738317757009349}, {
         0.000024, 0.00018000000000000004`, 0.0001, 0.000052177581392778313`, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.10356583218373844`}, {
         0.000024, 0.00018000000000000004`, 0.0001, 0.00016500000000000016`, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.235294117647059}, {
         0.000024, 0.00018000000000000004`, 0.0001, 0.0005217758139277831, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.39361254767503817`}, {
         0.000024, 0.00018000000000000004`, 0.0001, 0.0016500000000000017`, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.5000000000000001}, {
         0.000024, 0.0003600000000000001, 0.0001, 0.000016500000000000015`, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.023529411764705903`}, {
         0.000024, 0.0003600000000000001, 0.0001, 0.000052177581392778313`, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.06601047571169773}, {
         0.000024, 0.0003600000000000001, 0.0001, 0.00016500000000000016`, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.1538461538461539}, {
         0.000024, 0.0003600000000000001, 0.0001, 0.0005217758139277831, 0, 1,
           7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.26561052385648354`}, {
         0.000024, 0.0003600000000000001, 0.0001, 0.0016500000000000017`, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.3448275862068966}, {
         0.000024, 0, 3.0000000000000013`*^-6, 0.0001, 3.5*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.057901085645355864`}, {
         0.000024, 0, 9.486832980505141*^-6, 0.0001, 3.5*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.15517252975139625`}, {
         0.000024, 0, 0.00003000000000000001, 0.0001, 3.5*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.33103448275862074`}, {
         0.000024, 0, 0.00009486832980505142, 0.0001, 3.5*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.5159442342521813}, {
         0.000024, 0, 0.00030000000000000014`, 0.0001, 3.5*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.6266318537859008}, {
         0.000024, 0, 3.0000000000000013`*^-6, 0.0001, 7.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.0424778761061947}, {
         0.000024, 0, 9.486832980505141*^-6, 0.0001, 7.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.11459214550830052`}, {
         0.000024, 0, 0.00003000000000000001, 0.0001, 7.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.24742268041237114`}, {
         0.000024, 0, 0.00009486832980505142, 0.0001, 7.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.39060056309756436`}, {
         0.000024, 0, 0.00030000000000000014`, 0.0001, 7.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.4780876494023904}, {
         0.000024, 0, 3.0000000000000013`*^-6, 0.0001, 1.4*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.027713625866050817`}, {
         0.000024, 0, 9.486832980505141*^-6, 0.0001, 1.4*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.07523930500173176}, {
         0.000024, 0, 0.00003000000000000001, 0.0001, 1.4*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.16438356164383564`}, {
         0.000024, 0, 0.00009486832980505142, 0.0001, 1.4*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.2628747818212248}, {
         0.000024, 0, 0.00030000000000000014`, 0.0001, 1.4*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.32432432432432434`}, {
         0.000024, 0, 0.0002, 0.000016500000000000015`, 2.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.06250000000000006}, {
         0.000024, 0, 0.0002, 0.000052177581392778313`, 2.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.17411239489546848`}, {
         0.000024, 0, 0.0002, 0.00016500000000000016`, 2.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.4000000000000002}, {
         0.000024, 0, 0.0002, 0.0005217758139277831, 2.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.6782688399674106}, {
         0.000024, 0, 0.0002, 0.0016500000000000017`, 2.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.8695652173913045}, {
         0.000024, 0, 0.0002, 0.000016500000000000015`, 4.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.047619047619047665`}, {
         0.000024, 0, 0.0002, 0.000052177581392778313`, 4.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.13652705949581445`}, {
         0.000024, 0, 0.0002, 0.00016500000000000016`, 4.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.33333333333333354`}, {
         0.000024, 0, 0.0002, 0.0005217758139277831, 4.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.6125741132772071}, {
         0.000024, 0, 0.0002, 0.0016500000000000017`, 4.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.8333333333333335}, {
         0.000024, 0, 0.0002, 0.000016500000000000015`, 8.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.03225806451612906}, {
         0.000024, 0, 0.0002, 0.000052177581392778313`, 8.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.09535767393826007}, {
         0.000024, 0, 0.0002, 0.00016500000000000016`, 8.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.25000000000000017`}, {
         0.000024, 0, 0.0002, 0.0005217758139277831, 8.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.5131670194948623}, {
         0.000024, 0, 0.0002, 0.0016500000000000017`, 8.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.7692307692307693}}], "ActualOutput" -> 
      HoldForm[{{
         0.000024, 0.000018000000000000017`, 2.1*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.06250000000000006}, {
         0.000024, 0.000056920997883030876`, 2.1*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.17411239489546845`}, {
         0.000024, 0.00018000000000000017`, 2.1*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.4000000000000002}, {
         0.000024, 0.0005692099788303088, 2.1*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.6782688399674107}, {
         0.000024, 0.0018000000000000017`, 2.1*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.8695652173913044}, {
         0.000024, 0.000018000000000000017`, 4.2*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.047619047619047665`}, {
         0.000024, 0.000056920997883030876`, 4.2*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.13652705949581442`}, {
         0.000024, 0.00018000000000000017`, 4.2*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.33333333333333354`}, {
         0.000024, 0.0005692099788303088, 4.2*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.6125741132772071}, {
         0.000024, 0.0018000000000000017`, 4.2*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.8333333333333335}, {
         0.000024, 0.000018000000000000017`, 8.4*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.032258064516129066`}, {
         0.000024, 0.000056920997883030876`, 8.4*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.09535767393826004}, {
         0.000024, 0.00018000000000000017`, 8.4*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.2500000000000002}, {
         0.000024, 0.0005692099788303088, 8.4*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.5131670194948622}, {
         0.000024, 0.0018000000000000017`, 8.4*^-6, 0, 0.0001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.7692307692307694}, {
         0.000024, 0.0001, 2.2499999999999996`*^-6, 0, 3.400000000000002*^-7, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.04914933837429115}, {
         0.000024, 0.0001, 2.2499999999999996`*^-6, 0, 
          1.0751744044572496`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.13597151798297863`}, {
         0.000024, 0.0001, 2.2499999999999996`*^-6, 0, 
          3.4000000000000018`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.3080568720379148}, {
         0.000024, 0.0001, 2.2499999999999996`*^-6, 0, 
          0.000010751744044572496`, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.5136142175737066}, {
         0.000024, 0.0001, 2.2499999999999996`*^-6, 0, 0.00003400000000000002,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.6509764646970456}, {
         0.000024, 0.0001, 4.499999999999999*^-6, 0, 3.400000000000002*^-7, 1,
           7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.03367875647668396}, {
         0.000024, 0.0001, 4.499999999999999*^-6, 0, 1.0751744044572496`*^-6, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.09481652165128766}, {
         0.000024, 0.0001, 4.499999999999999*^-6, 0, 3.4000000000000018`*^-6, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.22260273972602748`}, {
         0.000024, 0.0001, 4.499999999999999*^-6, 0, 0.000010751744044572496`,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.3879359014999327}, {
         0.000024, 0.0001, 4.499999999999999*^-6, 0, 0.00003400000000000002, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.5070202808112325}, {
         0.000024, 0.0001, 8.999999999999999*^-6, 0, 3.400000000000002*^-7, 1,
           7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.020667726550079507`}, {
         0.000024, 0.0001, 8.999999999999999*^-6, 0, 1.0751744044572496`*^-6, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.05906293364296222}, {
         0.000024, 0.0001, 8.999999999999999*^-6, 0, 3.4000000000000018`*^-6, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.14317180616740097`}, {
         0.000024, 0.0001, 8.999999999999999*^-6, 0, 0.000010751744044572496`,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.26046664992560487`}, {
         0.000024, 0.0001, 8.999999999999999*^-6, 0, 0.00003400000000000002, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_glyc3p.txt", 
          0.351541373715522}, {
         0.000024, 0.000018000000000000017`, 0, 0.0006500000000000001, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.06060606060606066}, {
         0.000024, 0.000056920997883030876`, 0, 0.0006500000000000001, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.16016871556802817`}, {
         0.000024, 0.00018000000000000017`, 0, 0.0006500000000000001, 0.00001,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.3333333333333335}, {
         0.000024, 0.0005692099788303088, 0, 0.0006500000000000001, 0.00001, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.5064979510986386}, {
         0.000024, 0.0018000000000000017`, 0, 0.0006500000000000001, 0.00001, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.6060606060606061}, {
         0.000024, 0.000018000000000000017`, 0, 0.0013000000000000002`, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.04545454545454549}, {
         0.000024, 0.000056920997883030876`, 0, 0.0013000000000000002`, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.12012653667602116`}, {
         0.000024, 0.00018000000000000017`, 0, 0.0013000000000000002`, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.2500000000000001}, {
         0.000024, 0.0005692099788303088, 0, 0.0013000000000000002`, 0.00001, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.379873463323979}, {
         0.000024, 0.0018000000000000017`, 0, 0.0013000000000000002`, 0.00001,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.4545454545454546}, {
         0.000024, 0.000018000000000000017`, 0, 0.0026000000000000003`, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.03030303030303033}, {
         0.000024, 0.000056920997883030876`, 0, 0.0026000000000000003`, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.08008435778401408}, {
         0.000024, 0.00018000000000000017`, 0, 0.0026000000000000003`, 
          0.00001, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.16666666666666674`}, {
         0.000024, 0.0005692099788303088, 0, 0.0026000000000000003`, 0.00001, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.2532489755493193}, {
         0.000024, 0.0018000000000000017`, 0, 0.0026000000000000003`, 0.00001,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.30303030303030304`}, {
         0.000024, 0.002, 0, 0.0000935, 3.400000000000002*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.06250000000000004}, {
         0.000024, 0.002, 0, 0.0000935, 1.0751744044572496`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.17411239489546843`}, {
         0.000024, 0.002, 0, 0.0000935, 3.4000000000000018`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.40000000000000013`}, {
         0.000024, 0.002, 0, 0.0000935, 0.000010751744044572496`, 1, 7.4, 23.,
           "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.6782688399674105}, {
         0.000024, 0.002, 0, 0.0000935, 0.00003400000000000002, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.8695652173913044}, {
         0.000024, 0.002, 0, 0.000187, 3.400000000000002*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.047619047619047644`}, {
         0.000024, 0.002, 0, 0.000187, 1.0751744044572496`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.1365270594958144}, {
         0.000024, 0.002, 0, 0.000187, 3.4000000000000018`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.3333333333333335}, {
         0.000024, 0.002, 0, 0.000187, 0.000010751744044572496`, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.612574113277207}, {
         0.000024, 0.002, 0, 0.000187, 0.00003400000000000002, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.8333333333333335}, {
         0.000024, 0.002, 0, 0.000374, 3.400000000000002*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.03225806451612905}, {
         0.000024, 0.002, 0, 0.000374, 1.0751744044572496`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.09535767393826004}, {
         0.000024, 0.002, 0, 0.000374, 3.4000000000000018`*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.25000000000000017`}, {
         0.000024, 0.002, 0, 0.000374, 0.000010751744044572496`, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.5131670194948622}, {
         0.000024, 0.002, 0, 0.000374, 0.00003400000000000002, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadp.txt", 
          0.7692307692307694}, {
         0.000024, 0.000018999999999999998`, 3.0000000000000013`*^-6, 0.002, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.06250000000000001}, {
         0.000024, 0.000018999999999999998`, 9.486832980505141*^-6, 0.002, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.17411239489546834`}, {
         0.000024, 0.000018999999999999998`, 0.00003000000000000001, 0.002, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.4000000000000001}, {
         0.000024, 0.000018999999999999998`, 0.00009486832980505142, 0.002, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.6782688399674105}, {
         0.000024, 0.000018999999999999998`, 0.00030000000000000014`, 0.002, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.8695652173913044}, {
         0.000024, 0.000037999999999999995`, 3.0000000000000013`*^-6, 0.002, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.04761904761904763}, {
         0.000024, 0.000037999999999999995`, 9.486832980505141*^-6, 0.002, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.13652705949581434`}, {
         0.000024, 0.000037999999999999995`, 0.00003000000000000001, 0.002, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.3333333333333334}, {
         0.000024, 0.000037999999999999995`, 0.00009486832980505142, 0.002, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.6125741132772069}, {
         0.000024, 0.000037999999999999995`, 0.00030000000000000014`, 0.002, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.8333333333333335}, {
         0.000024, 0.00007599999999999999, 3.0000000000000013`*^-6, 0.002, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.03225806451612904}, {
         0.000024, 0.00007599999999999999, 9.486832980505141*^-6, 0.002, 0, 1,
           7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.09535767393825999}, {
         0.000024, 0.00007599999999999999, 0.00003000000000000001, 0.002, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.25000000000000006`}, {
         0.000024, 0.00007599999999999999, 0.00009486832980505142, 0.002, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.5131670194948621}, {
         0.000024, 0.00007599999999999999, 0.00030000000000000014`, 0.002, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.7692307692307693}, {
         0.000024, 0.00009000000000000002, 0.0001, 0.000016500000000000015`, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.052980132450331174`}, {
         0.000024, 0.00009000000000000002, 0.0001, 0.000052177581392778313`, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.1447390418373348}, {
         0.000024, 0.00009000000000000002, 0.0001, 0.00016500000000000016`, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.3200000000000002}, {
         0.000024, 0.00009000000000000002, 0.0001, 0.0005217758139277831, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.518564992170751}, {
         0.000024, 0.00009000000000000002, 0.0001, 0.0016500000000000017`, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.6451612903225806}, {
         0.000024, 0.00018000000000000004`, 0.0001, 0.000016500000000000015`, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.03738317757009349}, {
         0.000024, 0.00018000000000000004`, 0.0001, 0.000052177581392778313`, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.10356583218373844`}, {
         0.000024, 0.00018000000000000004`, 0.0001, 0.00016500000000000016`, 
          0, 1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.235294117647059}, {
         0.000024, 0.00018000000000000004`, 0.0001, 0.0005217758139277831, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.39361254767503817`}, {
         0.000024, 0.00018000000000000004`, 0.0001, 0.0016500000000000017`, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.5000000000000001}, {
         0.000024, 0.0003600000000000001, 0.0001, 0.000016500000000000015`, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.023529411764705903`}, {
         0.000024, 0.0003600000000000001, 0.0001, 0.000052177581392778313`, 0,
           1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.06601047571169773}, {
         0.000024, 0.0003600000000000001, 0.0001, 0.00016500000000000016`, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.1538461538461539}, {
         0.000024, 0.0003600000000000001, 0.0001, 0.0005217758139277831, 0, 1,
           7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.26561052385648354`}, {
         0.000024, 0.0003600000000000001, 0.0001, 0.0016500000000000017`, 0, 
          1, 7.4, 23., "test_files/simulate_data/prod_inhib_dhap.txt", 
          0.3448275862068966}, {
         0.000024, 0, 3.0000000000000013`*^-6, 0.0001, 3.5*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.057901085645355864`}, {
         0.000024, 0, 9.486832980505141*^-6, 0.0001, 3.5*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.15517252975139625`}, {
         0.000024, 0, 0.00003000000000000001, 0.0001, 3.5*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.33103448275862074`}, {
         0.000024, 0, 0.00009486832980505142, 0.0001, 3.5*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.5159442342521813}, {
         0.000024, 0, 0.00030000000000000014`, 0.0001, 3.5*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.6266318537859008}, {
         0.000024, 0, 3.0000000000000013`*^-6, 0.0001, 7.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.0424778761061947}, {
         0.000024, 0, 9.486832980505141*^-6, 0.0001, 7.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.11459214550830052`}, {
         0.000024, 0, 0.00003000000000000001, 0.0001, 7.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.24742268041237114`}, {
         0.000024, 0, 0.00009486832980505142, 0.0001, 7.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.39060056309756436`}, {
         0.000024, 0, 0.00030000000000000014`, 0.0001, 7.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.4780876494023904}, {
         0.000024, 0, 3.0000000000000013`*^-6, 0.0001, 1.4*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.027713625866050817`}, {
         0.000024, 0, 9.486832980505141*^-6, 0.0001, 1.4*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.07523930500173176}, {
         0.000024, 0, 0.00003000000000000001, 0.0001, 1.4*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.16438356164383564`}, {
         0.000024, 0, 0.00009486832980505142, 0.0001, 1.4*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.2628747818212248}, {
         0.000024, 0, 0.00030000000000000014`, 0.0001, 1.4*^-6, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.32432432432432434`}, {
         0.000024, 0, 0.0002, 0.000016500000000000015`, 2.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.06250000000000006}, {
         0.000024, 0, 0.0002, 0.000052177581392778313`, 2.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.17411239489546848`}, {
         0.000024, 0, 0.0002, 0.00016500000000000016`, 2.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.4000000000000002}, {
         0.000024, 0, 0.0002, 0.0005217758139277831, 2.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.6782688399674106}, {
         0.000024, 0, 0.0002, 0.0016500000000000017`, 2.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.8695652173913045}, {
         0.000024, 0, 0.0002, 0.000016500000000000015`, 4.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.047619047619047665`}, {
         0.000024, 0, 0.0002, 0.000052177581392778313`, 4.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.13652705949581445`}, {
         0.000024, 0, 0.0002, 0.00016500000000000016`, 4.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.33333333333333354`}, {
         0.000024, 0, 0.0002, 0.0005217758139277831, 4.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.6125741132772071}, {
         0.000024, 0, 0.0002, 0.0016500000000000017`, 4.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.8333333333333335}, {
         0.000024, 0, 0.0002, 0.000016500000000000015`, 8.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.03225806451612906}, {
         0.000024, 0, 0.0002, 0.000052177581392778313`, 8.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.09535767393826007}, {
         0.000024, 0, 0.0002, 0.00016500000000000016`, 8.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.25000000000000017`}, {
         0.000024, 0, 0.0002, 0.0005217758139277831, 8.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.5131670194948623}, {
         0.000024, 0, 0.0002, 0.0016500000000000017`, 8.*^-7, 1, 7.4, 23., 
          "test_files/simulate_data/prod_inhib_nadph.txt", 
          0.7692307692307693}}], "ExpectedMessages" -> {}, 
      "ActualMessages" -> {}, "AbsoluteTimeUsed" -> 
      Quantity[0.000093`2.1189979463859268, "Seconds"], "CPUTimeUsed" -> 
      Quantity[0., "Seconds"], "MemoryUsed" -> Quantity[32, "Bytes"]]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.695643326830839*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1742, 1020},
WindowMargins->{{3, Automatic}, {3, 24}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 536, 14, 125, "Input"],
Cell[CellGroupData[{
Cell[1119, 38, 1845, 45, 327, "Input"],
Cell[2967, 85, 554, 9, 24, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3558, 99, 360, 7, 59, "Subsubsection"],
Cell[3921, 108, 3772, 64, 305, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7730, 177, 373, 5, 35, "Subsubsection"],
Cell[8106, 184, 3303, 60, 306, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11446, 249, 458, 7, 35, "Subsubsection"],
Cell[11907, 258, 109, 1, 55, "Input"],
Cell[12019, 261, 3588, 64, 329, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15644, 330, 426, 5, 35, "Subsubsection"],
Cell[16073, 337, 3468, 60, 350, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19578, 402, 474, 6, 35, "Subsubsection"],
Cell[20055, 410, 3509, 63, 351, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23601, 478, 921, 16, 35, "Subsubsection"],
Cell[24525, 496, 5077, 99, 508, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29639, 600, 973, 17, 35, "Subsubsection"],
Cell[30615, 619, 5525, 110, 485, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36177, 734, 1070, 18, 35, "Subsubsection"],
Cell[37250, 754, 4682, 89, 442, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41969, 848, 1001, 17, 35, "Subsubsection"],
Cell[42973, 867, 4006, 68, 328, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47016, 940, 1052, 18, 35, "Subsubsection"],
Cell[48071, 960, 4107, 70, 328, "Input"],
Cell[CellGroupData[{
Cell[52203, 1034, 103, 1, 32, "Input"],
Cell[52309, 1037, 517389, 10148, 302, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

